webpackJsonp([11],{"0h7d":function(n,e){n.exports="import { Component } from 'react';\nimport Icon from '../../icon';\nimport Radio from '../../radio';\nimport Button from '../../button';\nimport CSSModules from 'react-css-modules';\nimport Tabs from '../Tabs';\nimport Panel from '../Panel';\nTabs.Panel = Panel;\n\nclass TabsDemo1 extends Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: 'Tab 1', content: 'Content of Tab 1', key: 1, closable: false },\n      { title: 'Tab 2', content: 'Content of Tab 2', key: 2 },\n      { title: 'Tab 3', content: 'Content of Tab 3', key: 3 },\n    ];\n\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n    };\n  }\n  \n  deleteButton = ()=> {\n    let data = this.state.panes;\n    let activeKey = this.state.activeKey;\n    data.splice(activeKey, 1); \n    \n    if (data.length <= activeKey + 1)\n      activeKey = data.length - 1;\n    this.setState({\n      panes: data,\n      activeKey: activeKey\n    })\n  }\n\n  onClick = (key)=> {\n    this.setState({activeKey: key})\n  }\n\n  render() {\n    return (\n      <div className=\"markdown-block\">\n          <h3>基本</h3>\n          <p>标准线条式页签</p>\n            <Tabs \n                activeKey={this.state.activeKey} \n                onClick={this.onClick} >\n              {this.state.panes.map(pane => <Panel title={pane.title} key={pane.key} closable={pane.closable}>{pane.content}</Panel>)}\n            </Tabs>\n      </div>\n    );\n  }\n}\n\nclass TabsDemo2 extends Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: 'Tab 1', content: 'Content of Tab 1', key: 1, closable: false },\n      { title: 'Tab 2', content: 'Content of Tab 2', key: 2 },\n      { title: 'Tab 3', content: 'Content of Tab 3', key: 3 },\n    ];\n\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n    };\n  }\n  \n  deleteButton = ()=> {\n    let data = this.state.panes;\n    let activeKey = this.state.activeKey;\n    data.splice(activeKey, 1); \n    \n    if (data.length <= activeKey + 1)\n      activeKey = data.length - 1;\n    this.setState({\n      panes: data,\n      activeKey: activeKey\n    })\n  }\n\n  onClick = (key)=> {\n    this.setState({activeKey: key})\n  }\n\n  render() {\n    return (\n      <div className=\"markdown-block\">\n          <h3>禁用</h3>\n            <p>对某项实行禁用</p>\n            <Tabs\n              activeKey={this.state.activeKey}\n              onClick={this.onClick}\n              >\n                <Panel title={<span><Icon size={18} name=\"account\" />Tab 1</span>} key=\"1\">\n                  Tab 1\n                </Panel>\n                <Panel title={<span><Icon size={18} name=\"account\" />Tab 2</span>} key=\"2\">\n                  Tab 2\n                </Panel>\n                <Panel title={<span><Icon size={18} name=\"account\" />Tab 3</span>} key=\"3\" disabled >\n                  Tab 3\n                </Panel>\n            </Tabs>\n      </div>\n    );\n  }\n}\n\nclass TabsDemo3 extends Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: 'Tab 1', content: 'Content of Tab 1', key: 1, closable: false },\n      { title: 'Tab 2', content: 'Content of Tab 2', key: 2 },\n      { title: 'Tab 3', content: 'Content of Tab 3', key: 3 },\n    ];\n\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n    };\n  }\n  \n  deleteButton = ()=> {\n    let data = this.state.panes;\n    let activeKey = this.state.activeKey;\n    data.splice(activeKey, 1); \n    \n    if (data.length <= activeKey + 1)\n      activeKey = data.length - 1;\n    this.setState({\n      panes: data,\n      activeKey: activeKey\n    })\n  }\n\n  onClick = (key)=> {\n    this.setState({activeKey: key})\n  }\n\n  render() {\n    return (\n      <div className=\"markdown-block\">\n          <h3>迷你</h3>\n            <p>用在狭小的区块或子级Tab</p>\n            <Tabs \n                size={'small'}\n                activeKey={this.state.activeKey} \n                onClick={this.onClick} >\n              {this.state.panes.map(pane => <Panel title={pane.title} key={pane.key} closable={pane.closable}>{pane.content}</Panel>)}\n            </Tabs>\n      </div>\n    );\n  }\n}\n\n\nclass TabsDemo4 extends Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: 'Tab 1', content: 'Content of Tab 1', key: 1, closable: false },\n      { title: 'Tab 2', content: 'Content of Tab 2', key: 2 },\n      { title: 'Tab 3', content: 'Content of Tab 3', key: 3 },\n    ];\n\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n    };\n  }\n  \n  deleteButton = ()=> {\n    let data = this.state.panes;\n    let activeKey = this.state.activeKey;\n    data.splice(activeKey, 1); \n    \n    if (data.length <= activeKey + 1)\n      activeKey = data.length - 1;\n    this.setState({\n      panes: data,\n      activeKey: activeKey\n    })\n  }\n\n  onClick = (key)=> {\n    this.setState({activeKey: key})\n  }\n\n  render() {\n    return (\n      <div className=\"markdown-block\">\n          <h3>带图标</h3>\n            <p>带图标的Tab</p>\n            <Tabs\n              activeKey={this.state.activeKey}\n              onClick={this.onClick}\n              >\n                <Panel title={<span><Icon size={18} name=\"account\" />Tab 1</span>} key=\"1\">\n                  Tab 1\n                </Panel>\n                <Panel title={<span><Icon size={18} name=\"account\" />Tab 2</span>} key=\"2\">\n                  Tab 2\n                </Panel>\n                <Panel title={<span><Icon size={18} name=\"account\" />Tab 3</span>} key=\"3\" >\n                  Tab 3\n                </Panel>\n            </Tabs>\n      </div>\n    );\n  }\n}\n\n\nclass TabsDemo5 extends Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: 'Tab 1', content: 'Content of Tab 1', key: 1, closable: false },\n      { title: 'Tab 2', content: 'Content of Tab 2', key: 2 },\n      { title: 'Tab 3', content: 'Content of Tab 3', key: 3 },\n    ];\n\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n    };\n  }\n  \n  deleteButton = ()=> {\n    let data = this.state.panes;\n    let activeKey = this.state.activeKey;\n    data.splice(activeKey, 1); \n    \n    if (data.length <= activeKey + 1)\n      activeKey = data.length - 1;\n    this.setState({\n      panes: data,\n      activeKey: activeKey\n    })\n  }\n\n  onClick = (key)=> {\n    this.setState({activeKey: key})\n  }\n\n  render() {\n    return (\n      <div className=\"markdown-block\">\n          <h3>纵向</h3>\n          <p>纵向的Tab</p>\n          <Tabs \n              activeKey={this.state.activeKey}\n              tabPosition={'left'} \n              onClick={this.onClick} >\n            {this.state.panes.map(pane => <Panel title={pane.title} key={pane.key} closable={pane.closable}>{pane.content}</Panel>)}\n          </Tabs>\n      </div>\n    );\n  }\n}\n\n\nclass TabsDemo6 extends Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: 'Tab 1', content: 'Content of Tab 1', key: 1, closable: false },\n      { title: 'Tab 2', content: 'Content of Tab 2', key: 2 },\n      { title: 'Tab 3', content: 'Content of Tab 3', key: 3 },\n    ];\n\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n    };\n  }\n  \n  deleteButton = ()=> {\n    let data = this.state.panes;\n    let activeKey = this.state.activeKey;\n    data.splice(activeKey, 1); \n    \n    if (data.length <= activeKey + 1)\n      activeKey = data.length - 1;\n    this.setState({\n      panes: data,\n      activeKey: activeKey\n    })\n  }\n\n  onClick = (key)=> {\n    this.setState({activeKey: key})\n  }\n\n  render() {\n    return (\n      <div className=\"markdown-block\">\n          <h3>卡片式</h3>\n          <p>卡片式的页签，常用于容器顶部</p>\n          <Tabs activeKey={this.state.activeKey}\n              type={'card'} \n              tabDeleteButton={true}\n              deleteButton={this.deleteButton}\n              onClick={this.onClick}\n          >\n            {this.state.panes.map(pane => <Panel title={pane.title} key={pane.key} closable={pane.closable}>{pane.content}</Panel>)}\n          </Tabs>\n      </div>\n    );\n  }\n}\n\nclass TabsDemo7 extends Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: 'Tab 1', content: 'Content of Tab 1', key: 1, closable: false },\n      { title: 'Tab 2', content: 'Content of Tab 2', key: 2 },\n      { title: 'Tab 3', content: 'Content of Tab 3', key: 3 },\n    ];\n\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n    };\n  }\n  \n  deleteButton = ()=> {\n    let data = this.state.panes;\n    let activeKey = this.state.activeKey;\n    data.splice(activeKey, 1); \n    \n    if (data.length <= activeKey + 1)\n      activeKey = data.length - 1;\n    this.setState({\n      panes: data,\n      activeKey: activeKey\n    })\n  }\n\n  onClick = (key)=> {\n    this.setState({activeKey: key})\n  }\n\n  render() {\n    return (\n      <div className=\"markdown-block\">\n          <p>button可作为更次级的页签来使用</p>\n          <Tabs activeKey={this.state.activeKey}\n              type={'button'} \n              onClick={this.onClick}\n          >\n            {this.state.panes.map(pane => <Panel title={pane.title} key={pane.key} closable={pane.closable}>{pane.content}</Panel>)}\n          </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default class TabsDemo extends Component {\n  render() {\n    return (\n      <div className=\"markdown-block\">\n        <TabsDemo1 />\n        <br /><br />\n        <TabsDemo2 />\n        <br /><br />\n        <TabsDemo3 />\n        <br /><br />\n        <TabsDemo4 />\n        <br /><br />\n        <TabsDemo5 />\n        <br /><br />\n        <TabsDemo6 />\n        <br /><br />\n        <TabsDemo7 />\n        <br /><br />\n      </div>\n    );\n  }\n}"}});
//# sourceMappingURL=11.25ac90e1a1624be6051d.js.map