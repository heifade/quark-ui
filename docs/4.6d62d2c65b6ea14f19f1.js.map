{"version":3,"sources":["webpack:///4.6d62d2c65b6ea14f19f1.js","webpack:///./node_modules/inputmask-core/lib/index.js","webpack:///./src/components/input/CardInput.js","webpack:///./src/components/input/demo/index.js"],"names":["webpackJsonp","13mF","module","exports","__webpack_require__","extend","dest","src","props","Object","keys","i","l","length","copy","obj","mergeFormatCharacters","formatCharacters","merged","DEFAULT_FORMAT_CHARACTERS","chars","char","Pattern","source","placeholderChar","isRevealingMask","this","DEFAULT_PLACEHOLDER_CHAR","pattern","firstEditableIndex","lastEditableIndex","_editableIndices","_parse","InputMask","options","selection","start","end","value","Error","setPattern","DIGIT_RE","LETTER_RE","ALPHANNUMERIC_RE","*","validate","test","1","a","A","transform","toUpperCase","#","prototype","sourceChars","split","patternIndex","push","formatValue","valueBuffer","Array","valueIndex","isEditableIndex","isValidAtIndex","index","format","input","selectionBefore","valueBefore","getValue","inputIndex","_historyIndex","_history","splice","_lastOp","_lastSelection","lastOp","backspace","paste","initialState","slice","charAt","substring","undo","historyItem","startUndo","redo","pop","setValue","emptyValue","join","_resetHistory","setSelection","getRawValue","rawValue","pIU7","__webpack_exports__","_objectWithoutProperties","target","indexOf","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","isUndo","e","ctrlKey","metaKey","keyCode","shiftKey","KEYCODE_Y","KEYCODE_Z","isRedo","getSelection","el","rangeEl","clone","selectionStart","selectionEnd","focus","createTextRange","duplicate","moveToBookmark","document","createRange","getBookmark","setEndPoint","text","setSelectionRange","collapse","moveStart","moveEnd","select","_dec","_class","_class2","_temp","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_1_inputmask_core__","n","__WEBPACK_IMPORTED_MODULE_1_inputmask_core___default","__WEBPACK_IMPORTED_MODULE_2_prop_types__","__WEBPACK_IMPORTED_MODULE_2_prop_types___default","__WEBPACK_IMPORTED_MODULE_3_react_css_modules__","__WEBPACK_IMPORTED_MODULE_3_react_css_modules___default","__WEBPACK_IMPORTED_MODULE_4__constants__","__WEBPACK_IMPORTED_MODULE_5__Input_css__","__WEBPACK_IMPORTED_MODULE_5__Input_css___default","_extends","assign","arguments","key","_createClass","defineProperties","descriptor","defineProperty","protoProps","staticProps","CardInput","allowMultiple","b","_PureComponent","_this","getPrototypeOf","onChange","maskValue","mask","sizeDiff","getDisplayValue","onKeyPress","altKey","preventDefault","data","onKeyDown","onPaste","clipboardData","getData","getEventHandlers","state","_this2","ref","r","maxLength","eventHandlers","_props","disabled","_props$size","size","_props$placeholder","placeholder","_props2","cleanedProps","inputProps","styleName","React","createElement","PureComponent","displayName","defaultProps","propTypes","oneOf","bool","string","isRequired","object","V","qeLS","d","InputDemo","__WEBPACK_IMPORTED_MODULE_1__Input__","__WEBPACK_IMPORTED_MODULE_2__icon__","__WEBPACK_IMPORTED_MODULE_3__Search__","__WEBPACK_IMPORTED_MODULE_4__CardInput__","_Component","onChangeCard","setState","prefix","name","className","defaultValue","style","width","type","autosize","rows","Component"],"mappings":"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","file":"4.6d62d2c65b6ea14f19f1.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ \"13mF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction extend(dest, src) {\n  if (src) {\n    var props = Object.keys(src)\n    for (var i = 0, l = props.length; i < l ; i++) {\n      dest[props[i]] = src[props[i]]\n    }\n  }\n  return dest\n}\n\nfunction copy(obj) {\n  return extend({}, obj)\n}\n\n/**\n * Merge an object defining format characters into the defaults.\n * Passing null/undefined for en existing format character removes it.\n * Passing a definition for an existing format character overrides it.\n * @param {?Object} formatCharacters.\n */\nfunction mergeFormatCharacters(formatCharacters) {\n  var merged = copy(DEFAULT_FORMAT_CHARACTERS)\n  if (formatCharacters) {\n    var chars = Object.keys(formatCharacters)\n    for (var i = 0, l = chars.length; i < l ; i++) {\n      var char = chars[i]\n      if (formatCharacters[char] == null) {\n        delete merged[char]\n      }\n      else {\n        merged[char] = formatCharacters[char]\n      }\n    }\n  }\n  return merged\n}\n\nvar ESCAPE_CHAR = '\\\\'\n\nvar DIGIT_RE = /^\\d$/\nvar LETTER_RE = /^[A-Za-z]$/\nvar ALPHANNUMERIC_RE = /^[\\dA-Za-z]$/\n\nvar DEFAULT_PLACEHOLDER_CHAR = '_'\nvar DEFAULT_FORMAT_CHARACTERS = {\n  '*': {\n    validate: function(char) { return ALPHANNUMERIC_RE.test(char) }\n  },\n  '1': {\n    validate: function(char) { return DIGIT_RE.test(char) }\n  },\n  'a': {\n    validate: function(char) { return LETTER_RE.test(char) }\n  },\n  'A': {\n    validate: function(char) { return LETTER_RE.test(char) },\n    transform: function(char) { return char.toUpperCase() }\n  },\n  '#': {\n    validate: function(char) { return ALPHANNUMERIC_RE.test(char) },\n    transform: function(char) { return char.toUpperCase() }\n  }\n}\n\n/**\n * @param {string} source\n * @patam {?Object} formatCharacters\n */\nfunction Pattern(source, formatCharacters, placeholderChar, isRevealingMask) {\n  if (!(this instanceof Pattern)) {\n    return new Pattern(source, formatCharacters, placeholderChar)\n  }\n\n  /** Placeholder character */\n  this.placeholderChar = placeholderChar || DEFAULT_PLACEHOLDER_CHAR\n  /** Format character definitions. */\n  this.formatCharacters = formatCharacters || DEFAULT_FORMAT_CHARACTERS\n  /** Pattern definition string with escape characters. */\n  this.source = source\n  /** Pattern characters after escape characters have been processed. */\n  this.pattern = []\n  /** Length of the pattern after escape characters have been processed. */\n  this.length = 0\n  /** Index of the first editable character. */\n  this.firstEditableIndex = null\n  /** Index of the last editable character. */\n  this.lastEditableIndex = null\n  /** Lookup for indices of editable characters in the pattern. */\n  this._editableIndices = {}\n  /** If true, only the pattern before the last valid value character shows. */\n  this.isRevealingMask = isRevealingMask || false\n\n  this._parse()\n}\n\nPattern.prototype._parse = function parse() {\n  var sourceChars = this.source.split('')\n  var patternIndex = 0\n  var pattern = []\n\n  for (var i = 0, l = sourceChars.length; i < l; i++) {\n    var char = sourceChars[i]\n    if (char === ESCAPE_CHAR) {\n      if (i === l - 1) {\n        throw new Error('InputMask: pattern ends with a raw ' + ESCAPE_CHAR)\n      }\n      char = sourceChars[++i]\n    }\n    else if (char in this.formatCharacters) {\n      if (this.firstEditableIndex === null) {\n        this.firstEditableIndex = patternIndex\n      }\n      this.lastEditableIndex = patternIndex\n      this._editableIndices[patternIndex] = true\n    }\n\n    pattern.push(char)\n    patternIndex++\n  }\n\n  if (this.firstEditableIndex === null) {\n    throw new Error(\n      'InputMask: pattern \"' + this.source + '\" does not contain any editable characters.'\n    )\n  }\n\n  this.pattern = pattern\n  this.length = pattern.length\n}\n\n/**\n * @param {Array<string>} value\n * @return {Array<string>}\n */\nPattern.prototype.formatValue = function format(value) {\n  var valueBuffer = new Array(this.length)\n  var valueIndex = 0\n\n  for (var i = 0, l = this.length; i < l ; i++) {\n    if (this.isEditableIndex(i)) {\n      if (this.isRevealingMask &&\n          value.length <= valueIndex &&\n          !this.isValidAtIndex(value[valueIndex], i)) {\n        break\n      }\n      valueBuffer[i] = (value.length > valueIndex && this.isValidAtIndex(value[valueIndex], i)\n                        ? this.transform(value[valueIndex], i)\n                        : this.placeholderChar)\n      valueIndex++\n    }\n    else {\n      valueBuffer[i] = this.pattern[i]\n      // Also allow the value to contain static values from the pattern by\n      // advancing its index.\n      if (value.length > valueIndex && value[valueIndex] === this.pattern[i]) {\n        valueIndex++\n      }\n    }\n  }\n\n  return valueBuffer\n}\n\n/**\n * @param {number} index\n * @return {boolean}\n */\nPattern.prototype.isEditableIndex = function isEditableIndex(index) {\n  return !!this._editableIndices[index]\n}\n\n/**\n * @param {string} char\n * @param {number} index\n * @return {boolean}\n */\nPattern.prototype.isValidAtIndex = function isValidAtIndex(char, index) {\n  return this.formatCharacters[this.pattern[index]].validate(char)\n}\n\nPattern.prototype.transform = function transform(char, index) {\n  var format = this.formatCharacters[this.pattern[index]]\n  return typeof format.transform == 'function' ? format.transform(char) : char\n}\n\nfunction InputMask(options) {\n  if (!(this instanceof InputMask)) { return new InputMask(options) }\n  options = extend({\n    formatCharacters: null,\n    pattern: null,\n    isRevealingMask: false,\n    placeholderChar: DEFAULT_PLACEHOLDER_CHAR,\n    selection: {start: 0, end: 0},\n    value: ''\n  }, options)\n\n  if (options.pattern == null) {\n    throw new Error('InputMask: you must provide a pattern.')\n  }\n\n  if (typeof options.placeholderChar !== 'string' || options.placeholderChar.length > 1) {\n    throw new Error('InputMask: placeholderChar should be a single character or an empty string.')\n  }\n\n  this.placeholderChar = options.placeholderChar\n  this.formatCharacters = mergeFormatCharacters(options.formatCharacters)\n  this.setPattern(options.pattern, {\n    value: options.value,\n    selection: options.selection,\n    isRevealingMask: options.isRevealingMask\n  })\n}\n\n// Editing\n\n/**\n * Applies a single character of input based on the current selection.\n * @param {string} char\n * @return {boolean} true if a change has been made to value or selection as a\n *   result of the input, false otherwise.\n */\nInputMask.prototype.input = function input(char) {\n  // Ignore additional input if the cursor's at the end of the pattern\n  if (this.selection.start === this.selection.end &&\n      this.selection.start === this.pattern.length) {\n    return false\n  }\n\n  var selectionBefore = copy(this.selection)\n  var valueBefore = this.getValue()\n\n  var inputIndex = this.selection.start\n\n  // If the cursor or selection is prior to the first editable character, make\n  // sure any input given is applied to it.\n  if (inputIndex < this.pattern.firstEditableIndex) {\n    inputIndex = this.pattern.firstEditableIndex\n  }\n\n  // Bail out or add the character to input\n  if (this.pattern.isEditableIndex(inputIndex)) {\n    if (!this.pattern.isValidAtIndex(char, inputIndex)) {\n      return false\n    }\n    this.value[inputIndex] = this.pattern.transform(char, inputIndex)\n  }\n\n  // If multiple characters were selected, blank the remainder out based on the\n  // pattern.\n  var end = this.selection.end - 1\n  while (end > inputIndex) {\n    if (this.pattern.isEditableIndex(end)) {\n      this.value[end] = this.placeholderChar\n    }\n    end--\n  }\n\n  // Advance the cursor to the next character\n  this.selection.start = this.selection.end = inputIndex + 1\n\n  // Skip over any subsequent static characters\n  while (this.pattern.length > this.selection.start &&\n         !this.pattern.isEditableIndex(this.selection.start)) {\n    this.selection.start++\n    this.selection.end++\n  }\n\n  // History\n  if (this._historyIndex != null) {\n    // Took more input after undoing, so blow any subsequent history away\n    this._history.splice(this._historyIndex, this._history.length - this._historyIndex)\n    this._historyIndex = null\n  }\n  if (this._lastOp !== 'input' ||\n      selectionBefore.start !== selectionBefore.end ||\n      this._lastSelection !== null && selectionBefore.start !== this._lastSelection.start) {\n    this._history.push({value: valueBefore, selection: selectionBefore, lastOp: this._lastOp})\n  }\n  this._lastOp = 'input'\n  this._lastSelection = copy(this.selection)\n\n  return true\n}\n\n/**\n * Attempts to delete from the value based on the current cursor position or\n * selection.\n * @return {boolean} true if the value or selection changed as the result of\n *   backspacing, false otherwise.\n */\nInputMask.prototype.backspace = function backspace() {\n  // If the cursor is at the start there's nothing to do\n  if (this.selection.start === 0 && this.selection.end === 0) {\n    return false\n  }\n\n  var selectionBefore = copy(this.selection)\n  var valueBefore = this.getValue()\n\n  // No range selected - work on the character preceding the cursor\n  if (this.selection.start === this.selection.end) {\n    if (this.pattern.isEditableIndex(this.selection.start - 1)) {\n      this.value[this.selection.start - 1] = this.placeholderChar\n    }\n    this.selection.start--\n    this.selection.end--\n  }\n  // Range selected - delete characters and leave the cursor at the start of the selection\n  else {\n    var end = this.selection.end - 1\n    while (end >= this.selection.start) {\n      if (this.pattern.isEditableIndex(end)) {\n        this.value[end] = this.placeholderChar\n      }\n      end--\n    }\n    this.selection.end = this.selection.start\n  }\n\n  // History\n  if (this._historyIndex != null) {\n    // Took more input after undoing, so blow any subsequent history away\n    this._history.splice(this._historyIndex, this._history.length - this._historyIndex)\n  }\n  if (this._lastOp !== 'backspace' ||\n      selectionBefore.start !== selectionBefore.end ||\n      this._lastSelection !== null && selectionBefore.start !== this._lastSelection.start) {\n    this._history.push({value: valueBefore, selection: selectionBefore, lastOp: this._lastOp})\n  }\n  this._lastOp = 'backspace'\n  this._lastSelection = copy(this.selection)\n\n  return true\n}\n\n/**\n * Attempts to paste a string of input at the current cursor position or over\n * the top of the current selection.\n * Invalid content at any position will cause the paste to be rejected, and it\n * may contain static parts of the mask's pattern.\n * @param {string} input\n * @return {boolean} true if the paste was successful, false otherwise.\n */\nInputMask.prototype.paste = function paste(input) {\n  // This is necessary because we're just calling input() with each character\n  // and rolling back if any were invalid, rather than checking up-front.\n  var initialState = {\n    value: this.value.slice(),\n    selection: copy(this.selection),\n    _lastOp: this._lastOp,\n    _history: this._history.slice(),\n    _historyIndex: this._historyIndex,\n    _lastSelection: copy(this._lastSelection)\n  }\n\n  // If there are static characters at the start of the pattern and the cursor\n  // or selection is within them, the static characters must match for a valid\n  // paste.\n  if (this.selection.start < this.pattern.firstEditableIndex) {\n    for (var i = 0, l = this.pattern.firstEditableIndex - this.selection.start; i < l; i++) {\n      if (input.charAt(i) !== this.pattern.pattern[i]) {\n        return false\n      }\n    }\n\n    // Continue as if the selection and input started from the editable part of\n    // the pattern.\n    input = input.substring(this.pattern.firstEditableIndex - this.selection.start)\n    this.selection.start = this.pattern.firstEditableIndex\n  }\n\n  for (i = 0, l = input.length;\n       i < l && this.selection.start <= this.pattern.lastEditableIndex;\n       i++) {\n    var valid = this.input(input.charAt(i))\n    // Allow static parts of the pattern to appear in pasted input - they will\n    // already have been stepped over by input(), so verify that the value\n    // deemed invalid by input() was the expected static character.\n    if (!valid) {\n      if (this.selection.start > 0) {\n        // XXX This only allows for one static character to be skipped\n        var patternIndex = this.selection.start - 1\n        if (!this.pattern.isEditableIndex(patternIndex) &&\n            input.charAt(i) === this.pattern.pattern[patternIndex]) {\n          continue\n        }\n      }\n      extend(this, initialState)\n      return false\n    }\n  }\n\n  return true\n}\n\n// History\n\nInputMask.prototype.undo = function undo() {\n  // If there is no history, or nothing more on the history stack, we can't undo\n  if (this._history.length === 0 || this._historyIndex === 0) {\n    return false\n  }\n\n  var historyItem\n  if (this._historyIndex == null) {\n    // Not currently undoing, set up the initial history index\n    this._historyIndex = this._history.length - 1\n    historyItem = this._history[this._historyIndex]\n    // Add a new history entry if anything has changed since the last one, so we\n    // can redo back to the initial state we started undoing from.\n    var value = this.getValue()\n    if (historyItem.value !== value ||\n        historyItem.selection.start !== this.selection.start ||\n        historyItem.selection.end !== this.selection.end) {\n      this._history.push({value: value, selection: copy(this.selection), lastOp: this._lastOp, startUndo: true})\n    }\n  }\n  else {\n    historyItem = this._history[--this._historyIndex]\n  }\n\n  this.value = historyItem.value.split('')\n  this.selection = historyItem.selection\n  this._lastOp = historyItem.lastOp\n  return true\n}\n\nInputMask.prototype.redo = function redo() {\n  if (this._history.length === 0 || this._historyIndex == null) {\n    return false\n  }\n  var historyItem = this._history[++this._historyIndex]\n  // If this is the last history item, we're done redoing\n  if (this._historyIndex === this._history.length - 1) {\n    this._historyIndex = null\n    // If the last history item was only added to start undoing, remove it\n    if (historyItem.startUndo) {\n      this._history.pop()\n    }\n  }\n  this.value = historyItem.value.split('')\n  this.selection = historyItem.selection\n  this._lastOp = historyItem.lastOp\n  return true\n}\n\n// Getters & setters\n\nInputMask.prototype.setPattern = function setPattern(pattern, options) {\n  options = extend({\n    selection: {start: 0, end: 0},\n    value: ''\n  }, options)\n  this.pattern = new Pattern(pattern, this.formatCharacters, this.placeholderChar, options.isRevealingMask)\n  this.setValue(options.value)\n  this.emptyValue = this.pattern.formatValue([]).join('')\n  this.selection = options.selection\n  this._resetHistory()\n}\n\nInputMask.prototype.setSelection = function setSelection(selection) {\n  this.selection = copy(selection)\n  if (this.selection.start === this.selection.end) {\n    if (this.selection.start < this.pattern.firstEditableIndex) {\n      this.selection.start = this.selection.end = this.pattern.firstEditableIndex\n      return true\n    }\n    // Set selection to the first editable, non-placeholder character before the selection\n    // OR to the beginning of the pattern\n    var index = this.selection.start\n    while (index >= this.pattern.firstEditableIndex) {\n      if (this.pattern.isEditableIndex(index - 1) &&\n          this.value[index - 1] !== this.placeholderChar ||\n          index === this.pattern.firstEditableIndex) {\n        this.selection.start = this.selection.end = index\n        break\n      }\n      index--\n    }\n    return true\n  }\n  return false\n}\n\nInputMask.prototype.setValue = function setValue(value) {\n  if (value == null) {\n    value = ''\n  }\n  this.value = this.pattern.formatValue(value.split(''))\n}\n\nInputMask.prototype.getValue = function getValue() {\n  return this.value.join('')\n}\n\nInputMask.prototype.getRawValue = function getRawValue() {\n  var rawValue = []\n  for (var i = 0; i < this.value.length; i++) {\n    if (this.pattern._editableIndices[i] === true) {\n      rawValue.push(this.value[i])\n    }\n  }\n  return rawValue.join('')\n}\n\nInputMask.prototype._resetHistory = function _resetHistory() {\n  this._history = []\n  this._historyIndex = null\n  this._lastOp = null\n  this._lastSelection = copy(this.selection)\n}\n\nInputMask.Pattern = Pattern\n\nmodule.exports = InputMask\n\n\n/***/ }),\n\n/***/ \"pIU7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"Jmof\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_inputmask_core__ = __webpack_require__(\"13mF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_inputmask_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_inputmask_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(\"KSGD\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_css_modules__ = __webpack_require__(\"211U\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_css_modules___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_css_modules__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(\"oiih\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Input_css__ = __webpack_require__(\"PewI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Input_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__Input_css__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _class, _class2, _temp;\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Input Component\n * @author yan\n */\n\n\n\n\n\n\n\nvar KEYCODE_Z = 90;\nvar KEYCODE_Y = 89;\n\nfunction isUndo(e) {\n  return (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Y : KEYCODE_Z);\n}\n\nfunction isRedo(e) {\n  return (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Z : KEYCODE_Y);\n}\nfunction getSelection(el) {\n  var start = void 0,\n      end = void 0,\n      rangeEl = void 0,\n      clone = void 0;\n\n  if (el.selectionStart !== undefined) {\n    start = el.selectionStart;\n    end = el.selectionEnd;\n  } else {\n    try {\n      el.focus();\n      rangeEl = el.createTextRange();\n      clone = rangeEl.duplicate();\n\n      rangeEl.moveToBookmark(document.selection.createRange().getBookmark());\n      clone.setEndPoint('EndToStart', rangeEl);\n\n      start = clone.text.length;\n      end = start + rangeEl.text.length;\n    } catch (e) {\n      /* not focused or not visible */\n    }\n  }\n\n  return { start: start, end: end };\n}\n\nfunction setSelection(el, selection) {\n  var rangeEl = void 0;\n\n  try {\n    if (el.selectionStart !== undefined) {\n      el.focus();\n      el.setSelectionRange(selection.start, selection.end);\n    } else {\n      el.focus();\n      rangeEl = el.createTextRange();\n      rangeEl.collapse(true);\n      rangeEl.moveStart('character', selection.start);\n      rangeEl.moveEnd('character', selection.end - selection.start);\n      rangeEl.select();\n    }\n  } catch (e) {\n    /* not focused or not visible */\n  }\n}\n\nvar CardInput = (_dec = __WEBPACK_IMPORTED_MODULE_3_react_css_modules___default()(__WEBPACK_IMPORTED_MODULE_5__Input_css___default.a, { allowMultiple: __WEBPACK_IMPORTED_MODULE_4__constants__[\"b\" /* allowMultiple */] }), _dec(_class = (_temp = _class2 = function (_PureComponent) {\n  _inherits(CardInput, _PureComponent);\n\n  function CardInput(props) {\n    _classCallCheck(this, CardInput);\n\n    var _this = _possibleConstructorReturn(this, (CardInput.__proto__ || Object.getPrototypeOf(CardInput)).call(this, props));\n\n    _this.onChange = function (e) {\n      var maskValue = _this.mask.getValue();\n      if (e.target.value !== maskValue) {\n        // Cut or delete operations will have shortened the value\n        if (e.target.value.length < maskValue.length) {\n          var sizeDiff = maskValue.length - e.target.value.length;\n          _this.mask.selection = getSelection(_this.input);\n          _this.mask.selection.end = _this.mask.selection.start + sizeDiff;\n          _this.mask.backspace();\n        }\n        var value = _this.getDisplayValue();\n        e.target.value = value;\n        if (value) {\n          setSelection(_this.input, _this.mask.selection);\n        }\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(e);\n      }\n    };\n\n    _this.onKeyPress = function (e) {\n      // console.log('onKeyPress', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n\n      // Ignore modified key presses\n      // Ignore enter key to allow form submission\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n      _this.mask.selection = getSelection(_this.input);\n\n      if (_this.mask.input(e.key || e.data)) {\n        e.target.value = _this.mask.getValue();\n        // this._updateInputSelection()\n\n        setSelection(_this.input, _this.mask.selection);\n\n        if (_this.props.onChange) {\n          _this.props.onChange(e);\n        }\n      }\n    };\n\n    _this.onKeyDown = function (e) {\n      // console.log('onKeyDown', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n      if (isUndo(e)) {\n        e.preventDefault();\n        if (_this.mask.undo()) {\n          e.target.value = _this.getDisplayValue();\n          setSelection(_this.input, _this.mask.selection);\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n        return;\n      } else if (isRedo(e)) {\n        e.preventDefault();\n        if (_this.mask.redo()) {\n          e.target.value = _this.getDisplayValue();\n          setSelection(_this.input, _this.mask.selection);\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n        return;\n      }\n\n      if (e.key === 'Backspace') {\n        e.preventDefault();\n        _this.mask.selection = getSelection(_this.input);\n        if (_this.mask.backspace()) {\n          var value = _this.getDisplayValue();\n\n          e.target.value = value;\n          if (value) {\n            setSelection(_this.input, _this.mask.selection);\n          }\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n      }\n    };\n\n    _this.onPaste = function (e) {\n      // console.log('onPaste', JSON.stringify(getSelection(this.input)), e.clipboardData.getData('Text'), e.target.value)\n      e.preventDefault();\n      _this.mask.selection = getSelection(_this.input);\n      // getData value needed for IE also works in FF & Chrome\n      if (_this.mask.paste(e.clipboardData.getData('Text'))) {\n        e.target.value = _this.mask.getValue();\n        // Timeout needed for IE\n        setSelection(_this.input, _this.mask.selection);\n        // setTimeout(function(){setSelection(this.input, this.mask.selection)}, 0)\n        if (_this.props.onChange) {\n          _this.props.onChange(e);\n        }\n      }\n    };\n\n    _this.getDisplayValue = function () {\n      var value = _this.mask.getValue();\n      return value === _this.mask.emptyValue ? '' : value;\n    };\n\n    _this.getEventHandlers = function () {\n      return {\n        onChange: _this.onChange,\n        onKeyDown: _this.onKeyDown,\n        onPaste: _this.onPaste,\n        onKeyPress: _this.onKeyPress\n      };\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CardInput, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var options = {\n        pattern: this.props.mask,\n        value: this.props.value,\n        formatCharacters: this.props.formatCharacters\n      };\n      if (this.props.placeholderChar) {\n        options.placeholderChar = this.props.placeholderChar;\n      }\n      this.mask = new __WEBPACK_IMPORTED_MODULE_1_inputmask_core___default.a(options);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var ref = function ref(r) {\n        return _this2.input = r;\n      };\n      var maxLength = this.mask.pattern.length;\n      var value = this.getDisplayValue();\n      var eventHandlers = this.getEventHandlers();\n      var _props = this.props,\n          disabled = _props.disabled,\n          _props$size = _props.size,\n          size = _props$size === undefined ? maxLength : _props$size,\n          _props$placeholder = _props.placeholder,\n          placeholder = _props$placeholder === undefined ? this.mask.emptyValue : _props$placeholder;\n\n      var _props2 = this.props,\n          placeholderChar = _props2.placeholderChar,\n          formatCharacters = _props2.formatCharacters,\n          cleanedProps = _objectWithoutProperties(_props2, ['placeholderChar', 'formatCharacters']);\n\n      var inputProps = _extends({}, cleanedProps, eventHandlers, {\n        ref: ref,\n        maxLength: maxLength,\n        value: value,\n        size: size,\n        placeholder: placeholder,\n        styleName: (disabled ? 'input__disabled' : '') + ' input__' + size\n      });\n\n      return React.createElement('input', inputProps);\n    }\n  }]);\n\n  return CardInput;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]), _class2.displayName = 'CardInput', _class2.defaultProps = {\n  size: 'normal',\n  disabled: false,\n  value: ''\n}, _class2.propTypes = {\n  size: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOf(['normal', 'large', 'small']),\n  disabled: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,\n  mask: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string.isRequired,\n  formatCharacters: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object,\n  placeholderChar: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string\n}, _temp)) || _class);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (CardInput);\n\n/***/ }),\n\n/***/ \"qeLS\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InputDemo; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"Jmof\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Input__ = __webpack_require__(\"XFRO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__icon__ = __webpack_require__(\"Pp2j\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Search__ = __webpack_require__(\"mkCw\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__CardInput__ = __webpack_require__(\"pIU7\");\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\nvar InputDemo = function (_Component) {\n  _inherits(InputDemo, _Component);\n\n  function InputDemo(props) {\n    _classCallCheck(this, InputDemo);\n\n    var _this = _possibleConstructorReturn(this, (InputDemo.__proto__ || Object.getPrototypeOf(InputDemo)).call(this, props));\n\n    _this.onChangeCard = function (e) {\n      var value = e.target.value;\n      _this.setState({ value: value });\n    };\n\n    _this.state = { value: '1234-1234-1234-1234' };\n    return _this;\n  }\n\n  _createClass(InputDemo, [{\n    key: 'render',\n    value: function render() {\n      var prefix = React.createElement(__WEBPACK_IMPORTED_MODULE_2__icon__[\"a\" /* default */], { size: 12, name: 'account' });\n\n      return React.createElement(\n        'div',\n        { className: 'markdown-block' },\n        React.createElement(\n          'h3',\n          null,\n          '\\u57FA\\u672C'\n        ),\n        React.createElement(\n          'p',\n          null,\n          '\\u8F93\\u5165\\u6846'\n        ),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_1__Input__[\"a\" /* default */], { placeholder: '\\u8BF7\\u8F93\\u5165', defaultValue: '12345465' }),\n        React.createElement(\n          'h3',\n          null,\n          '\\u56FE\\u6807'\n        ),\n        React.createElement(\n          'p',\n          null,\n          '\\u56FE\\u6807\\u8F93\\u5165\\u6846'\n        ),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_1__Input__[\"a\" /* default */], { placeholder: '\\u8BF7\\u8F93\\u5165', prefix: prefix }),\n        React.createElement(\n          'h3',\n          null,\n          '\\u5927\\u5C0F'\n        ),\n        React.createElement(\n          'p',\n          null,\n          '\\u4E09\\u79CD\\u5927\\u5C0F\\u7684\\u6570\\u5B57\\u8F93\\u5165\\u6846'\n        ),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_1__Input__[\"a\" /* default */], { size: 'large', placeholder: 'large size' }),\n        React.createElement('p', null),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_1__Input__[\"a\" /* default */], { size: 'normal', placeholder: 'normal size' }),\n        React.createElement('p', null),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_1__Input__[\"a\" /* default */], { size: 'small', placeholder: 'small size' }),\n        React.createElement(\n          'h3',\n          null,\n          '\\u7981\\u7528'\n        ),\n        React.createElement(\n          'p',\n          null,\n          '\\u8F93\\u5165\\u6846\\u7981\\u7528'\n        ),\n        React.createElement(\n          'p',\n          null,\n          React.createElement(__WEBPACK_IMPORTED_MODULE_1__Input__[\"a\" /* default */], { placeholder: 'input disabled', defaultValue: '12345465', disabled: true })\n        ),\n        React.createElement(\n          'h3',\n          null,\n          '\\u641C\\u7D22\\u6846'\n        ),\n        React.createElement(\n          'p',\n          null,\n          '\\u5E26\\u6709\\u641C\\u7D22\\u6309\\u94AE\\u7684\\u8F93\\u5165\\u6846'\n        ),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_3__Search__[\"a\" /* default */], { size: 'large', placeholder: 'input search text', style: { width: 240 } }),\n        React.createElement('p', null),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_3__Search__[\"a\" /* default */], { placeholder: 'input search text', style: { width: 240 } }),\n        React.createElement('p', null),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_3__Search__[\"a\" /* default */], { size: 'small', placeholder: 'input search text', style: { width: 240 } }),\n        React.createElement(\n          'h3',\n          null,\n          '\\u6587\\u672C\\u57DF'\n        ),\n        React.createElement(\n          'p',\n          null,\n          '\\u7528\\u4E8E\\u591A\\u884C\\u8F93\\u5165'\n        ),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_1__Input__[\"a\" /* default */], { type: 'textarea', placeholder: '\\u8BF7\\u8F93\\u5165', autosize: true, rows: 1 }),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_1__Input__[\"a\" /* default */], { type: 'textarea', placeholder: '\\u8BF7\\u8F93\\u5165', rows: 6 }),\n        React.createElement(\n          'h3',\n          null,\n          '\\u683C\\u5F0F\\u5316'\n        ),\n        React.createElement(\n          'p',\n          null,\n          '\\u9488\\u5BF916\\u6216\\u591A\\u4F4D\\u683C\\u5F0F\\u5316\\u8F93\\u5165'\n        ),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_4__CardInput__[\"a\" /* default */], {\n          size: 'large',\n          mask: '1111-1111-1111-1111',\n          placeholder: '1234-1234-1234-1234',\n          value: this.state.value,\n          onChange: this.onChangeCard\n        }),\n        React.createElement('p', null),\n        React.createElement(__WEBPACK_IMPORTED_MODULE_4__CardInput__[\"a\" /* default */], {\n          size: 'normal',\n          mask: '111111-111111-111111-111111',\n          onChange: this.onChangeCard\n        })\n      );\n    }\n  }]);\n\n  return InputDemo;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 4.6d62d2c65b6ea14f19f1.js","'use strict'\n\nfunction extend(dest, src) {\n  if (src) {\n    var props = Object.keys(src)\n    for (var i = 0, l = props.length; i < l ; i++) {\n      dest[props[i]] = src[props[i]]\n    }\n  }\n  return dest\n}\n\nfunction copy(obj) {\n  return extend({}, obj)\n}\n\n/**\n * Merge an object defining format characters into the defaults.\n * Passing null/undefined for en existing format character removes it.\n * Passing a definition for an existing format character overrides it.\n * @param {?Object} formatCharacters.\n */\nfunction mergeFormatCharacters(formatCharacters) {\n  var merged = copy(DEFAULT_FORMAT_CHARACTERS)\n  if (formatCharacters) {\n    var chars = Object.keys(formatCharacters)\n    for (var i = 0, l = chars.length; i < l ; i++) {\n      var char = chars[i]\n      if (formatCharacters[char] == null) {\n        delete merged[char]\n      }\n      else {\n        merged[char] = formatCharacters[char]\n      }\n    }\n  }\n  return merged\n}\n\nvar ESCAPE_CHAR = '\\\\'\n\nvar DIGIT_RE = /^\\d$/\nvar LETTER_RE = /^[A-Za-z]$/\nvar ALPHANNUMERIC_RE = /^[\\dA-Za-z]$/\n\nvar DEFAULT_PLACEHOLDER_CHAR = '_'\nvar DEFAULT_FORMAT_CHARACTERS = {\n  '*': {\n    validate: function(char) { return ALPHANNUMERIC_RE.test(char) }\n  },\n  '1': {\n    validate: function(char) { return DIGIT_RE.test(char) }\n  },\n  'a': {\n    validate: function(char) { return LETTER_RE.test(char) }\n  },\n  'A': {\n    validate: function(char) { return LETTER_RE.test(char) },\n    transform: function(char) { return char.toUpperCase() }\n  },\n  '#': {\n    validate: function(char) { return ALPHANNUMERIC_RE.test(char) },\n    transform: function(char) { return char.toUpperCase() }\n  }\n}\n\n/**\n * @param {string} source\n * @patam {?Object} formatCharacters\n */\nfunction Pattern(source, formatCharacters, placeholderChar, isRevealingMask) {\n  if (!(this instanceof Pattern)) {\n    return new Pattern(source, formatCharacters, placeholderChar)\n  }\n\n  /** Placeholder character */\n  this.placeholderChar = placeholderChar || DEFAULT_PLACEHOLDER_CHAR\n  /** Format character definitions. */\n  this.formatCharacters = formatCharacters || DEFAULT_FORMAT_CHARACTERS\n  /** Pattern definition string with escape characters. */\n  this.source = source\n  /** Pattern characters after escape characters have been processed. */\n  this.pattern = []\n  /** Length of the pattern after escape characters have been processed. */\n  this.length = 0\n  /** Index of the first editable character. */\n  this.firstEditableIndex = null\n  /** Index of the last editable character. */\n  this.lastEditableIndex = null\n  /** Lookup for indices of editable characters in the pattern. */\n  this._editableIndices = {}\n  /** If true, only the pattern before the last valid value character shows. */\n  this.isRevealingMask = isRevealingMask || false\n\n  this._parse()\n}\n\nPattern.prototype._parse = function parse() {\n  var sourceChars = this.source.split('')\n  var patternIndex = 0\n  var pattern = []\n\n  for (var i = 0, l = sourceChars.length; i < l; i++) {\n    var char = sourceChars[i]\n    if (char === ESCAPE_CHAR) {\n      if (i === l - 1) {\n        throw new Error('InputMask: pattern ends with a raw ' + ESCAPE_CHAR)\n      }\n      char = sourceChars[++i]\n    }\n    else if (char in this.formatCharacters) {\n      if (this.firstEditableIndex === null) {\n        this.firstEditableIndex = patternIndex\n      }\n      this.lastEditableIndex = patternIndex\n      this._editableIndices[patternIndex] = true\n    }\n\n    pattern.push(char)\n    patternIndex++\n  }\n\n  if (this.firstEditableIndex === null) {\n    throw new Error(\n      'InputMask: pattern \"' + this.source + '\" does not contain any editable characters.'\n    )\n  }\n\n  this.pattern = pattern\n  this.length = pattern.length\n}\n\n/**\n * @param {Array<string>} value\n * @return {Array<string>}\n */\nPattern.prototype.formatValue = function format(value) {\n  var valueBuffer = new Array(this.length)\n  var valueIndex = 0\n\n  for (var i = 0, l = this.length; i < l ; i++) {\n    if (this.isEditableIndex(i)) {\n      if (this.isRevealingMask &&\n          value.length <= valueIndex &&\n          !this.isValidAtIndex(value[valueIndex], i)) {\n        break\n      }\n      valueBuffer[i] = (value.length > valueIndex && this.isValidAtIndex(value[valueIndex], i)\n                        ? this.transform(value[valueIndex], i)\n                        : this.placeholderChar)\n      valueIndex++\n    }\n    else {\n      valueBuffer[i] = this.pattern[i]\n      // Also allow the value to contain static values from the pattern by\n      // advancing its index.\n      if (value.length > valueIndex && value[valueIndex] === this.pattern[i]) {\n        valueIndex++\n      }\n    }\n  }\n\n  return valueBuffer\n}\n\n/**\n * @param {number} index\n * @return {boolean}\n */\nPattern.prototype.isEditableIndex = function isEditableIndex(index) {\n  return !!this._editableIndices[index]\n}\n\n/**\n * @param {string} char\n * @param {number} index\n * @return {boolean}\n */\nPattern.prototype.isValidAtIndex = function isValidAtIndex(char, index) {\n  return this.formatCharacters[this.pattern[index]].validate(char)\n}\n\nPattern.prototype.transform = function transform(char, index) {\n  var format = this.formatCharacters[this.pattern[index]]\n  return typeof format.transform == 'function' ? format.transform(char) : char\n}\n\nfunction InputMask(options) {\n  if (!(this instanceof InputMask)) { return new InputMask(options) }\n  options = extend({\n    formatCharacters: null,\n    pattern: null,\n    isRevealingMask: false,\n    placeholderChar: DEFAULT_PLACEHOLDER_CHAR,\n    selection: {start: 0, end: 0},\n    value: ''\n  }, options)\n\n  if (options.pattern == null) {\n    throw new Error('InputMask: you must provide a pattern.')\n  }\n\n  if (typeof options.placeholderChar !== 'string' || options.placeholderChar.length > 1) {\n    throw new Error('InputMask: placeholderChar should be a single character or an empty string.')\n  }\n\n  this.placeholderChar = options.placeholderChar\n  this.formatCharacters = mergeFormatCharacters(options.formatCharacters)\n  this.setPattern(options.pattern, {\n    value: options.value,\n    selection: options.selection,\n    isRevealingMask: options.isRevealingMask\n  })\n}\n\n// Editing\n\n/**\n * Applies a single character of input based on the current selection.\n * @param {string} char\n * @return {boolean} true if a change has been made to value or selection as a\n *   result of the input, false otherwise.\n */\nInputMask.prototype.input = function input(char) {\n  // Ignore additional input if the cursor's at the end of the pattern\n  if (this.selection.start === this.selection.end &&\n      this.selection.start === this.pattern.length) {\n    return false\n  }\n\n  var selectionBefore = copy(this.selection)\n  var valueBefore = this.getValue()\n\n  var inputIndex = this.selection.start\n\n  // If the cursor or selection is prior to the first editable character, make\n  // sure any input given is applied to it.\n  if (inputIndex < this.pattern.firstEditableIndex) {\n    inputIndex = this.pattern.firstEditableIndex\n  }\n\n  // Bail out or add the character to input\n  if (this.pattern.isEditableIndex(inputIndex)) {\n    if (!this.pattern.isValidAtIndex(char, inputIndex)) {\n      return false\n    }\n    this.value[inputIndex] = this.pattern.transform(char, inputIndex)\n  }\n\n  // If multiple characters were selected, blank the remainder out based on the\n  // pattern.\n  var end = this.selection.end - 1\n  while (end > inputIndex) {\n    if (this.pattern.isEditableIndex(end)) {\n      this.value[end] = this.placeholderChar\n    }\n    end--\n  }\n\n  // Advance the cursor to the next character\n  this.selection.start = this.selection.end = inputIndex + 1\n\n  // Skip over any subsequent static characters\n  while (this.pattern.length > this.selection.start &&\n         !this.pattern.isEditableIndex(this.selection.start)) {\n    this.selection.start++\n    this.selection.end++\n  }\n\n  // History\n  if (this._historyIndex != null) {\n    // Took more input after undoing, so blow any subsequent history away\n    this._history.splice(this._historyIndex, this._history.length - this._historyIndex)\n    this._historyIndex = null\n  }\n  if (this._lastOp !== 'input' ||\n      selectionBefore.start !== selectionBefore.end ||\n      this._lastSelection !== null && selectionBefore.start !== this._lastSelection.start) {\n    this._history.push({value: valueBefore, selection: selectionBefore, lastOp: this._lastOp})\n  }\n  this._lastOp = 'input'\n  this._lastSelection = copy(this.selection)\n\n  return true\n}\n\n/**\n * Attempts to delete from the value based on the current cursor position or\n * selection.\n * @return {boolean} true if the value or selection changed as the result of\n *   backspacing, false otherwise.\n */\nInputMask.prototype.backspace = function backspace() {\n  // If the cursor is at the start there's nothing to do\n  if (this.selection.start === 0 && this.selection.end === 0) {\n    return false\n  }\n\n  var selectionBefore = copy(this.selection)\n  var valueBefore = this.getValue()\n\n  // No range selected - work on the character preceding the cursor\n  if (this.selection.start === this.selection.end) {\n    if (this.pattern.isEditableIndex(this.selection.start - 1)) {\n      this.value[this.selection.start - 1] = this.placeholderChar\n    }\n    this.selection.start--\n    this.selection.end--\n  }\n  // Range selected - delete characters and leave the cursor at the start of the selection\n  else {\n    var end = this.selection.end - 1\n    while (end >= this.selection.start) {\n      if (this.pattern.isEditableIndex(end)) {\n        this.value[end] = this.placeholderChar\n      }\n      end--\n    }\n    this.selection.end = this.selection.start\n  }\n\n  // History\n  if (this._historyIndex != null) {\n    // Took more input after undoing, so blow any subsequent history away\n    this._history.splice(this._historyIndex, this._history.length - this._historyIndex)\n  }\n  if (this._lastOp !== 'backspace' ||\n      selectionBefore.start !== selectionBefore.end ||\n      this._lastSelection !== null && selectionBefore.start !== this._lastSelection.start) {\n    this._history.push({value: valueBefore, selection: selectionBefore, lastOp: this._lastOp})\n  }\n  this._lastOp = 'backspace'\n  this._lastSelection = copy(this.selection)\n\n  return true\n}\n\n/**\n * Attempts to paste a string of input at the current cursor position or over\n * the top of the current selection.\n * Invalid content at any position will cause the paste to be rejected, and it\n * may contain static parts of the mask's pattern.\n * @param {string} input\n * @return {boolean} true if the paste was successful, false otherwise.\n */\nInputMask.prototype.paste = function paste(input) {\n  // This is necessary because we're just calling input() with each character\n  // and rolling back if any were invalid, rather than checking up-front.\n  var initialState = {\n    value: this.value.slice(),\n    selection: copy(this.selection),\n    _lastOp: this._lastOp,\n    _history: this._history.slice(),\n    _historyIndex: this._historyIndex,\n    _lastSelection: copy(this._lastSelection)\n  }\n\n  // If there are static characters at the start of the pattern and the cursor\n  // or selection is within them, the static characters must match for a valid\n  // paste.\n  if (this.selection.start < this.pattern.firstEditableIndex) {\n    for (var i = 0, l = this.pattern.firstEditableIndex - this.selection.start; i < l; i++) {\n      if (input.charAt(i) !== this.pattern.pattern[i]) {\n        return false\n      }\n    }\n\n    // Continue as if the selection and input started from the editable part of\n    // the pattern.\n    input = input.substring(this.pattern.firstEditableIndex - this.selection.start)\n    this.selection.start = this.pattern.firstEditableIndex\n  }\n\n  for (i = 0, l = input.length;\n       i < l && this.selection.start <= this.pattern.lastEditableIndex;\n       i++) {\n    var valid = this.input(input.charAt(i))\n    // Allow static parts of the pattern to appear in pasted input - they will\n    // already have been stepped over by input(), so verify that the value\n    // deemed invalid by input() was the expected static character.\n    if (!valid) {\n      if (this.selection.start > 0) {\n        // XXX This only allows for one static character to be skipped\n        var patternIndex = this.selection.start - 1\n        if (!this.pattern.isEditableIndex(patternIndex) &&\n            input.charAt(i) === this.pattern.pattern[patternIndex]) {\n          continue\n        }\n      }\n      extend(this, initialState)\n      return false\n    }\n  }\n\n  return true\n}\n\n// History\n\nInputMask.prototype.undo = function undo() {\n  // If there is no history, or nothing more on the history stack, we can't undo\n  if (this._history.length === 0 || this._historyIndex === 0) {\n    return false\n  }\n\n  var historyItem\n  if (this._historyIndex == null) {\n    // Not currently undoing, set up the initial history index\n    this._historyIndex = this._history.length - 1\n    historyItem = this._history[this._historyIndex]\n    // Add a new history entry if anything has changed since the last one, so we\n    // can redo back to the initial state we started undoing from.\n    var value = this.getValue()\n    if (historyItem.value !== value ||\n        historyItem.selection.start !== this.selection.start ||\n        historyItem.selection.end !== this.selection.end) {\n      this._history.push({value: value, selection: copy(this.selection), lastOp: this._lastOp, startUndo: true})\n    }\n  }\n  else {\n    historyItem = this._history[--this._historyIndex]\n  }\n\n  this.value = historyItem.value.split('')\n  this.selection = historyItem.selection\n  this._lastOp = historyItem.lastOp\n  return true\n}\n\nInputMask.prototype.redo = function redo() {\n  if (this._history.length === 0 || this._historyIndex == null) {\n    return false\n  }\n  var historyItem = this._history[++this._historyIndex]\n  // If this is the last history item, we're done redoing\n  if (this._historyIndex === this._history.length - 1) {\n    this._historyIndex = null\n    // If the last history item was only added to start undoing, remove it\n    if (historyItem.startUndo) {\n      this._history.pop()\n    }\n  }\n  this.value = historyItem.value.split('')\n  this.selection = historyItem.selection\n  this._lastOp = historyItem.lastOp\n  return true\n}\n\n// Getters & setters\n\nInputMask.prototype.setPattern = function setPattern(pattern, options) {\n  options = extend({\n    selection: {start: 0, end: 0},\n    value: ''\n  }, options)\n  this.pattern = new Pattern(pattern, this.formatCharacters, this.placeholderChar, options.isRevealingMask)\n  this.setValue(options.value)\n  this.emptyValue = this.pattern.formatValue([]).join('')\n  this.selection = options.selection\n  this._resetHistory()\n}\n\nInputMask.prototype.setSelection = function setSelection(selection) {\n  this.selection = copy(selection)\n  if (this.selection.start === this.selection.end) {\n    if (this.selection.start < this.pattern.firstEditableIndex) {\n      this.selection.start = this.selection.end = this.pattern.firstEditableIndex\n      return true\n    }\n    // Set selection to the first editable, non-placeholder character before the selection\n    // OR to the beginning of the pattern\n    var index = this.selection.start\n    while (index >= this.pattern.firstEditableIndex) {\n      if (this.pattern.isEditableIndex(index - 1) &&\n          this.value[index - 1] !== this.placeholderChar ||\n          index === this.pattern.firstEditableIndex) {\n        this.selection.start = this.selection.end = index\n        break\n      }\n      index--\n    }\n    return true\n  }\n  return false\n}\n\nInputMask.prototype.setValue = function setValue(value) {\n  if (value == null) {\n    value = ''\n  }\n  this.value = this.pattern.formatValue(value.split(''))\n}\n\nInputMask.prototype.getValue = function getValue() {\n  return this.value.join('')\n}\n\nInputMask.prototype.getRawValue = function getRawValue() {\n  var rawValue = []\n  for (var i = 0; i < this.value.length; i++) {\n    if (this.pattern._editableIndices[i] === true) {\n      rawValue.push(this.value[i])\n    }\n  }\n  return rawValue.join('')\n}\n\nInputMask.prototype._resetHistory = function _resetHistory() {\n  this._history = []\n  this._historyIndex = null\n  this._lastOp = null\n  this._lastSelection = copy(this.selection)\n}\n\nInputMask.Pattern = Pattern\n\nmodule.exports = InputMask\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inputmask-core/lib/index.js\n// module id = 13mF\n// module chunks = 4","/**\n * Input Component\n * @author yan\n */\nimport { PureComponent } from 'react';\nimport InputMask from 'inputmask-core';\nimport PropTypes from 'prop-types';\nimport CSSModules from 'react-css-modules';\nimport { allowMultiple } from '../../constants';\nimport styles from './Input.css';\n\nconst KEYCODE_Z = 90;\nconst KEYCODE_Y = 89;\n\nfunction isUndo(e) {\n  return (\n    (e.ctrlKey || e.metaKey) &&\n    e.keyCode === (e.shiftKey ? KEYCODE_Y : KEYCODE_Z)\n  );\n}\n\nfunction isRedo(e) {\n  return (\n    (e.ctrlKey || e.metaKey) &&\n    e.keyCode === (e.shiftKey ? KEYCODE_Z : KEYCODE_Y)\n  );\n}\nfunction getSelection(el) {\n  let start,\n    end,\n    rangeEl,\n    clone;\n\n  if (el.selectionStart !== undefined) {\n    start = el.selectionStart;\n    end = el.selectionEnd;\n  } else {\n    try {\n      el.focus();\n      rangeEl = el.createTextRange();\n      clone = rangeEl.duplicate();\n\n      rangeEl.moveToBookmark(document.selection.createRange().getBookmark());\n      clone.setEndPoint('EndToStart', rangeEl);\n\n      start = clone.text.length;\n      end = start + rangeEl.text.length;\n    } catch (e) {\n      /* not focused or not visible */\n    }\n  }\n\n  return { start, end };\n}\n\nfunction setSelection(el, selection) {\n  let rangeEl;\n\n  try {\n    if (el.selectionStart !== undefined) {\n      el.focus();\n      el.setSelectionRange(selection.start, selection.end);\n    } else {\n      el.focus();\n      rangeEl = el.createTextRange();\n      rangeEl.collapse(true);\n      rangeEl.moveStart('character', selection.start);\n      rangeEl.moveEnd('character', selection.end - selection.start);\n      rangeEl.select();\n    }\n  } catch (e) {\n    /* not focused or not visible */\n  }\n}\n\n@CSSModules(styles, { allowMultiple })\nclass CardInput extends PureComponent {\n  static displayName = 'CardInput';\n\n  static defaultProps = {\n    size: 'normal',\n    disabled: false,\n    value: '',\n  };\n\n  static propTypes = {\n    size: PropTypes.oneOf(['normal', 'large', 'small']),\n    disabled: PropTypes.bool,\n    mask: PropTypes.string.isRequired,\n    formatCharacters: PropTypes.object,\n    placeholderChar: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  onChange = (e) => {\n    const maskValue = this.mask.getValue();\n    if (e.target.value !== maskValue) {\n      // Cut or delete operations will have shortened the value\n      if (e.target.value.length < maskValue.length) {\n        const sizeDiff = maskValue.length - e.target.value.length;\n        this.mask.selection = getSelection(this.input);\n        this.mask.selection.end = this.mask.selection.start + sizeDiff;\n        this.mask.backspace();\n      }\n      const value = this.getDisplayValue();\n      e.target.value = value;\n      if (value) {\n        setSelection(this.input, this.mask.selection);\n      }\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  onKeyPress = (e) => {\n    // console.log('onKeyPress', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n\n    // Ignore modified key presses\n    // Ignore enter key to allow form submission\n    if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n      return;\n    }\n\n    e.preventDefault();\n    this.mask.selection = getSelection(this.input);\n\n    if (this.mask.input(e.key || e.data)) {\n      e.target.value = this.mask.getValue();\n      // this._updateInputSelection()\n\n      setSelection(this.input, this.mask.selection);\n\n      if (this.props.onChange) {\n        this.props.onChange(e);\n      }\n    }\n  };\n\n  onKeyDown = (e) => {\n    // console.log('onKeyDown', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n    if (isUndo(e)) {\n      e.preventDefault();\n      if (this.mask.undo()) {\n        e.target.value = this.getDisplayValue();\n        setSelection(this.input, this.mask.selection);\n        if (this.props.onChange) {\n          this.props.onChange(e);\n        }\n      }\n      return;\n    } else if (isRedo(e)) {\n      e.preventDefault();\n      if (this.mask.redo()) {\n        e.target.value = this.getDisplayValue();\n        setSelection(this.input, this.mask.selection);\n        if (this.props.onChange) {\n          this.props.onChange(e);\n        }\n      }\n      return;\n    }\n\n    if (e.key === 'Backspace') {\n      e.preventDefault();\n      this.mask.selection = getSelection(this.input);\n      if (this.mask.backspace()) {\n        const value = this.getDisplayValue();\n\n        e.target.value = value;\n        if (value) {\n          setSelection(this.input, this.mask.selection);\n        }\n        if (this.props.onChange) {\n          this.props.onChange(e);\n        }\n      }\n    }\n  };\n\n  onPaste = (e) => {\n    // console.log('onPaste', JSON.stringify(getSelection(this.input)), e.clipboardData.getData('Text'), e.target.value)\n    e.preventDefault();\n    this.mask.selection = getSelection(this.input);\n    // getData value needed for IE also works in FF & Chrome\n    if (this.mask.paste(e.clipboardData.getData('Text'))) {\n      e.target.value = this.mask.getValue();\n      // Timeout needed for IE\n      setSelection(this.input, this.mask.selection);\n      // setTimeout(function(){setSelection(this.input, this.mask.selection)}, 0)\n      if (this.props.onChange) {\n        this.props.onChange(e);\n      }\n    }\n  };\n\n  getDisplayValue = () => {\n    const value = this.mask.getValue();\n    return value === this.mask.emptyValue ? '' : value;\n  };\n\n  getEventHandlers = () => ({\n    onChange: this.onChange,\n    onKeyDown: this.onKeyDown,\n    onPaste: this.onPaste,\n    onKeyPress: this.onKeyPress,\n  });\n\n  componentWillMount() {\n    const options = {\n      pattern: this.props.mask,\n      value: this.props.value,\n      formatCharacters: this.props.formatCharacters,\n    };\n    if (this.props.placeholderChar) {\n      options.placeholderChar = this.props.placeholderChar;\n    }\n    this.mask = new InputMask(options);\n  }\n\n  render() {\n    const ref = r => this.input = r;\n    const maxLength = this.mask.pattern.length;\n    const value = this.getDisplayValue();\n    const eventHandlers = this.getEventHandlers();\n    const {\n      disabled,\n      size = maxLength,\n      placeholder = this.mask.emptyValue,\n    } = this.props;\n\n    const { placeholderChar, formatCharacters, ...cleanedProps } = this.props;\n    const inputProps = {\n      ...cleanedProps,\n      ...eventHandlers,\n      ref,\n      maxLength,\n      value,\n      size,\n      placeholder,\n      styleName: `${disabled ? 'input__disabled' : ''} input__${size}`,\n    };\n\n    return <input {...inputProps} />;\n  }\n}\nexport default CardInput;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/input/CardInput.js","import { Component } from 'react';\nimport Input from '../Input';\nimport Icon from '../../icon';\nimport Search from '../Search';\nimport CardInput from '../CardInput';\n\nexport default class InputDemo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { value: '1234-1234-1234-1234' };\n  }\n\n  onChangeCard = (e) => {\n    const value = e.target.value;\n    this.setState({ value });\n  }\n\n  render() {\n    const prefix = (<Icon size={12} name={'account'} />);\n\n    return (\n      <div className=\"markdown-block\">\n        <h3>基本</h3>\n        <p>输入框</p>\n          <Input placeholder=\"请输入\" defaultValue=\"12345465\" />\n        <h3>图标</h3>\n        <p>图标输入框</p>\n          <Input placeholder=\"请输入\" prefix={prefix} />\n        <h3>大小</h3>\n        <p>三种大小的数字输入框</p>\n          <Input size=\"large\" placeholder=\"large size\" />\n          <p></p>\n          <Input size=\"normal\" placeholder=\"normal size\" />\n          <p></p>\n          <Input size=\"small\" placeholder=\"small size\" />\n        <h3>禁用</h3>\n        <p>输入框禁用</p>\n        <p>\n          <Input placeholder=\"input disabled\" defaultValue=\"12345465\" disabled />\n        </p>\n        <h3>搜索框</h3>\n        <p>带有搜索按钮的输入框</p>\n          <Search size=\"large\" placeholder=\"input search text\" style={{ width: 240 }} />\n          <p></p>\n          <Search placeholder=\"input search text\" style={{ width: 240 }} />\n          <p></p>\n          <Search size=\"small\" placeholder=\"input search text\" style={{ width: 240 }} />\n        <h3>文本域</h3>\n        <p>用于多行输入</p>\n          <Input type=\"textarea\" placeholder=\"请输入\" autosize rows={1} />\n          <Input type=\"textarea\" placeholder=\"请输入\" rows={6} />\n        <h3>格式化</h3>\n        <p>针对16或多位格式化输入</p>\n          <CardInput\n            size=\"large\"\n            mask=\"1111-1111-1111-1111\"\n            placeholder=\"1234-1234-1234-1234\"\n            value={this.state.value}\n            onChange={this.onChangeCard}\n          />\n          <p></p>\n          <CardInput\n            size=\"normal\"\n            mask=\"111111-111111-111111-111111\"\n            onChange={this.onChangeCard}\n          />\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/input/demo/index.js"],"sourceRoot":""}