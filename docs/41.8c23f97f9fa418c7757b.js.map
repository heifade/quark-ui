{"version":3,"sources":["webpack:///41.8c23f97f9fa418c7757b.js","webpack:///./src/components/checkbox/demo/index.js?e818"],"names":["webpackJsonp","2YTV","module","exports"],"mappings":"AAAAA,cAAc,KAERC,OACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"41.8c23f97f9fa418c7757b.js","sourcesContent":["webpackJsonp([41],{\n\n/***/ \"2YTV\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"import { Component } from 'react';\\nimport Checkbox from '../Checkbox';\\n// import {Checkbox} from 'antd'\\nimport Button from '../../button';\\n\\n\\nconst CheckboxGroup = Checkbox.Group;\\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\\nconst defaultCheckedList = ['Apple', 'Orange'];\\nconst onChange = (e) => {\\n  console.log(e.target.checked, e.target.value);\\n};\\nexport default class CheckboxDemo extends Component {\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      disabled: false,\\n      checked: true,\\n\\n      checkedList: defaultCheckedList,\\n      checkAll: false,\\n    };\\n  }\\n\\n  handleToggleDisabled=() => {\\n    this.setState({\\n      disabled: !this.state.disabled,\\n    });\\n  }\\n\\n  handleToggleChecked=() => {\\n    this.setState({\\n      checked: !this.state.checked,\\n    });\\n  }\\n\\n  handleChange=(checkedList) => {\\n    this.setState({\\n      checkedList,\\n      checkAll: checkedList.length === plainOptions.length,\\n    });\\n  }\\n\\n  handleAllChange=(e) => {\\n    // const { checkedList, checkAll } = this.state;\\n    this.setState({\\n      checkedList: e.target.checked ? plainOptions : [],\\n      checkAll: e.target.checked,\\n    });\\n  }\\n\\n\\n  render() {\\n    const { checked, disabled, checkedList, checkAll } = this.state;\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>全选</h3>\\n        <p>\\n          <Checkbox\\n            checked={checkAll}\\n            disabled={disabled}\\n            onChange={this.handleAllChange}\\n          >&nbsp;全选</Checkbox>\\n        </p>\\n        <CheckboxGroup\\n          options={plainOptions}\\n          value={checkedList}\\n          disabled={disabled}\\n          onChange={this.handleChange}\\n        />\\n\\n        <h3>一组checkbox</h3>\\n        <div>\\n          <CheckboxGroup onChange={(v) => { this.checkValue.innerHTML = v; }} disabled={disabled}>\\n            <Checkbox value=\\\"A\\\"> A</Checkbox>\\n            <Checkbox value=\\\"B\\\"> B</Checkbox>\\n            <Checkbox value=\\\"C\\\"> C</Checkbox>\\n            <Checkbox value=\\\"D\\\"> D</Checkbox>\\n          </CheckboxGroup>\\n        </div>\\n        <p ref={(v) => { this.checkValue = v; }} />\\n        <h3>受控方式</h3>\\n        <p>\\n          <Checkbox\\n            checked={checked}\\n            disabled={disabled}\\n            onChange={this.handleToggleChecked}\\n          >&nbsp;受控的CheckBox组件</Checkbox>\\n        </p>\\n        <p>\\n          <Checkbox\\n            checked={checked}\\n            disabled={disabled}\\n            onChange={this.handleToggleChecked}\\n          >&nbsp;受控的CheckBox组件</Checkbox>\\n        </p>\\n        <p>\\n          <Checkbox\\n            name=\\\"my-check\\\"\\n            checked={checked}\\n            disabled={disabled}\\n            onChange={this.handleToggleChecked}\\n          >&nbsp;受控的CheckBox组件</Checkbox>\\n        </p>\\n        <p>\\n          <Checkbox\\n            name=\\\"my-check\\\"\\n            checked={checked}\\n            disabled={disabled}\\n            onChange={this.handleToggleChecked}\\n          >&nbsp;受控的CheckBox组件</Checkbox>\\n        </p>\\n        <h3>非受控方式</h3>\\n        <p>\\n          <Checkbox\\n            defaultChecked\\n            disabled={disabled}\\n            onChange={onChange}\\n          >&nbsp;非控的CheckBox组件</Checkbox>\\n        </p>\\n        <Button onClick={this.handleToggleDisabled}>{disabled ? '启用' : '禁用'}</Button>&nbsp;\\n        <Button onClick={this.handleToggleChecked}>{checked ? '取消选中' : '选中'}</Button>\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 41.8c23f97f9fa418c7757b.js","module.exports = \"import { Component } from 'react';\\nimport Checkbox from '../Checkbox';\\n// import {Checkbox} from 'antd'\\nimport Button from '../../button';\\n\\n\\nconst CheckboxGroup = Checkbox.Group;\\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\\nconst defaultCheckedList = ['Apple', 'Orange'];\\nconst onChange = (e) => {\\n  console.log(e.target.checked, e.target.value);\\n};\\nexport default class CheckboxDemo extends Component {\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      disabled: false,\\n      checked: true,\\n\\n      checkedList: defaultCheckedList,\\n      checkAll: false,\\n    };\\n  }\\n\\n  handleToggleDisabled=() => {\\n    this.setState({\\n      disabled: !this.state.disabled,\\n    });\\n  }\\n\\n  handleToggleChecked=() => {\\n    this.setState({\\n      checked: !this.state.checked,\\n    });\\n  }\\n\\n  handleChange=(checkedList) => {\\n    this.setState({\\n      checkedList,\\n      checkAll: checkedList.length === plainOptions.length,\\n    });\\n  }\\n\\n  handleAllChange=(e) => {\\n    // const { checkedList, checkAll } = this.state;\\n    this.setState({\\n      checkedList: e.target.checked ? plainOptions : [],\\n      checkAll: e.target.checked,\\n    });\\n  }\\n\\n\\n  render() {\\n    const { checked, disabled, checkedList, checkAll } = this.state;\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>全选</h3>\\n        <p>\\n          <Checkbox\\n            checked={checkAll}\\n            disabled={disabled}\\n            onChange={this.handleAllChange}\\n          >&nbsp;全选</Checkbox>\\n        </p>\\n        <CheckboxGroup\\n          options={plainOptions}\\n          value={checkedList}\\n          disabled={disabled}\\n          onChange={this.handleChange}\\n        />\\n\\n        <h3>一组checkbox</h3>\\n        <div>\\n          <CheckboxGroup onChange={(v) => { this.checkValue.innerHTML = v; }} disabled={disabled}>\\n            <Checkbox value=\\\"A\\\"> A</Checkbox>\\n            <Checkbox value=\\\"B\\\"> B</Checkbox>\\n            <Checkbox value=\\\"C\\\"> C</Checkbox>\\n            <Checkbox value=\\\"D\\\"> D</Checkbox>\\n          </CheckboxGroup>\\n        </div>\\n        <p ref={(v) => { this.checkValue = v; }} />\\n        <h3>受控方式</h3>\\n        <p>\\n          <Checkbox\\n            checked={checked}\\n            disabled={disabled}\\n            onChange={this.handleToggleChecked}\\n          >&nbsp;受控的CheckBox组件</Checkbox>\\n        </p>\\n        <p>\\n          <Checkbox\\n            checked={checked}\\n            disabled={disabled}\\n            onChange={this.handleToggleChecked}\\n          >&nbsp;受控的CheckBox组件</Checkbox>\\n        </p>\\n        <p>\\n          <Checkbox\\n            name=\\\"my-check\\\"\\n            checked={checked}\\n            disabled={disabled}\\n            onChange={this.handleToggleChecked}\\n          >&nbsp;受控的CheckBox组件</Checkbox>\\n        </p>\\n        <p>\\n          <Checkbox\\n            name=\\\"my-check\\\"\\n            checked={checked}\\n            disabled={disabled}\\n            onChange={this.handleToggleChecked}\\n          >&nbsp;受控的CheckBox组件</Checkbox>\\n        </p>\\n        <h3>非受控方式</h3>\\n        <p>\\n          <Checkbox\\n            defaultChecked\\n            disabled={disabled}\\n            onChange={onChange}\\n          >&nbsp;非控的CheckBox组件</Checkbox>\\n        </p>\\n        <Button onClick={this.handleToggleDisabled}>{disabled ? '启用' : '禁用'}</Button>&nbsp;\\n        <Button onClick={this.handleToggleChecked}>{checked ? '取消选中' : '选中'}</Button>\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/components/checkbox/demo/index.js\n// module id = 2YTV\n// module chunks = 41"],"sourceRoot":""}