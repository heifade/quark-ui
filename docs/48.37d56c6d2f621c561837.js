webpackJsonp([48],{VscV:function(n,t){n.exports="import { Component } from 'react';\nimport Animation from '../Animation';\nimport Select from '../../select';\nimport Button from '../../button';\nimport MOTIONS, { TIMING_FUNCTION } from '../motions';\nconst { Option } = Select;\n\nexport default class AnimationDemo extends Component {\n  state = {\n    timeFunction: 'ease',\n    status: false,\n    motion: 'fade',\n  };\n  render() {\n    const TFS = Object.keys(TIMING_FUNCTION);\n    return (\n      <div>\n        <h3>TIME FUNCTION</h3>\n        <Select\n          value={this.state.timeFunction}\n          onChange={({ value }) => {\n            this.setState({\n              timeFunction: value,\n            });\n          }}\n        >\n          {\n            TFS.map(name => (\n              <Option key={name} value={name}>{name}</Option>\n            ))\n          }\n        </Select>\n        <h3>MOTIONS</h3>\n        <Select\n          value={this.state.motion}\n          onChange={({ value }) => {\n            this.setState({\n              motion: value,\n            });\n          }}\n        >\n          {\n            MOTIONS.map(name => (\n              <Option key={name} value={name}>{name}</Option>\n            ))\n          }\n        </Select>\n        <Button\n          onClick={() => {\n            this.setState({\n              status: !this.state.status,\n            });\n          }}\n        >toggle</Button>\n        <div>\n          <Animation\n            in={this.state.status}\n            timingFunction={this.state.timeFunction}\n            motion={this.state.motion}\n            style={{\n              marginTop: 20,\n              display: 'inline-block',\n            }}\n          >\n            <div style={{\n              width: 100,\n              height: 100,\n              border: '1px solid var(--brand-primary)',\n            }}></div>\n          </Animation>\n        </div>\n      </div>\n    );\n  }\n}\n"}});
//# sourceMappingURL=48.37d56c6d2f621c561837.js.map