{"version":3,"sources":["webpack:///7.b5231860758d0d131cdd.js","webpack:///./src/components/upload/demo/index.js?2ed6"],"names":["webpackJsonp","liFK","module","exports"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"7.b5231860758d0d131cdd.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ \"liFK\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"import CSSModules from 'react-css-modules';\\nimport React, { Component } from 'react';\\nimport { allowMultiple } from '../../../constants';\\nimport Upload from '../Upload';\\nimport Icon from '../../icon/Icon';\\nimport Button from '../../button/Button';\\nimport message from '../../message/index';\\nimport styles from './index.css';\\n\\n@CSSModules(styles, { allowMultiple })\\nclass UploadDemo1 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n    };\\n  }\\n  render() {\\n    const props = {\\n      name: 'file',\\n      action: 'https://jsonplaceholder.typicode.com/posts/',\\n      headers: {\\n        authorization: 'authorization-text',\\n      },\\n      multiple: true,\\n      disabled: false,\\n      onResponse(response) {\\n        response = { result: 'success', msg: '上传成功！' };\\n        if (response.result === 'success') {\\n          return {\\n            success: true,\\n            message: '上传成功',\\n          };\\n        }\\n\\n        return {\\n          success: false,\\n          message: response.msg,\\n        };\\n      },\\n      onChange(info) {\\n        if (info.file.status !== 'uploading') {\\n          // console.log(info.file, info.fileList);\\n        }\\n        if (info.file.status === 'done') {\\n          message.success(`${info.file.name} 文件上传成功.`);\\n        } else if (info.file.status === 'error') {\\n          message.error(`${info.file.name} 文件上传失败！`);\\n        }\\n      },\\n    };\\n\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>1、经典款式，用户点击按钮弹出文件选择框。</h3>\\n        <Upload {...props}>\\n          <Button size=\\\"small\\\" type=\\\"secondary\\\" disabled={props.disabled}>\\n            <Icon size={12} name=\\\"upload\\\" /> 上传文件\\n          </Button>\\n        </Upload>\\n      </div>\\n    );\\n  }\\n}\\n\\n@CSSModules(styles, { allowMultiple })\\nclass UploadDemo2 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n    };\\n  }\\n  render() {\\n    const props = {\\n      name: 'file',\\n      action: 'https://jsonplaceholder.typicode.com/posts/',\\n      headers: {\\n        authorization: 'authorization-text',\\n      },\\n      multiple: true,\\n      disabled: false,\\n      onResponse(response) {\\n        response = { result: 'success', msg: '上传成功！' };\\n        if (response.result === 'success') {\\n          return {\\n            success: true,\\n            message: '上传成功',\\n          };\\n        }\\n\\n        return {\\n          success: false,\\n          message: response.msg,\\n        };\\n      },\\n      onChange(info) {\\n        if (info.file.status !== 'uploading') {\\n          // console.log(info.file, info.fileList);\\n        }\\n        if (info.file.status === 'done') {\\n          message.success(`${info.file.name} 文件上传成功.`);\\n        } else if (info.file.status === 'error') {\\n          message.error(`${info.file.name} 文件上传失败！`);\\n        }\\n      },\\n      defaultFileList: [{\\n        uid: 1,\\n        name: '图片1.png',\\n        status: 'done',\\n        url: 'https://www.ehuodi.com/module/index/img/index2/line2_bg.png',\\n      }, {\\n        uid: 2,\\n        name: '图片2.png',\\n        status: 'done',\\n        url: 'https://www.ehuodi.com/module/index/img/index2/line2_bg.png',\\n      }, {\\n        uid: 3,\\n        name: '图片3.png',\\n        status: 'error',\\n        response: '上传失败，图片太大',\\n      }],\\n    };\\n\\n\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>2、已上传文件的列表</h3>\\n        <p>使用 defaultFileList 设置已上传的内容。</p>\\n        <Upload {...props}>\\n          <Button size=\\\"small\\\" type=\\\"secondary\\\" disabled={props.disabled}>\\n            <Icon size={12} name=\\\"upload\\\" /> 上传文件\\n          </Button>\\n        </Upload>\\n      </div>\\n    );\\n  }\\n}\\n\\n@CSSModules(styles, { allowMultiple })\\nclass UploadDemo3 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      fileList: [{\\n        uid: -1,\\n        name: 'xxx.png',\\n        status: 'done',\\n        url: 'https://www.ehuodi.com/module/index/img/index2/line2_bg.png',\\n      }],\\n    };\\n  }\\n\\n  render() {\\n    const I = this;\\n    const props = {\\n      action: '//jsonplaceholder.typicode.com/posts/',\\n      disabled: false,\\n      onResponse(response) {\\n        response = { result: 'success', msg: '上传成功！' };\\n        if (response.result === 'success') {\\n          return {\\n            success: true,\\n            message: '上传成功',\\n          };\\n        }\\n\\n        return {\\n          success: false,\\n          message: response.msg,\\n        };\\n      },\\n      onChange(info) {\\n        let fileList = info.fileList;\\n\\n        // 最多只留1个文件，前面的将会被替换\\n        fileList = fileList.slice(-1);\\n\\n        // 读取上传后的文件链接\\n        fileList = fileList.map((file) => {\\n          if (file.response) {\\n            file.url = file.response.url;\\n          }\\n          return file;\\n        });\\n\\n        // // 过滤上传成功的文件\\n        // fileList = fileList.filter((file) => {\\n        //   if (file.response) {\\n        //     return file.status === 'done';\\n        //   }\\n        //   return true;\\n        // });\\n\\n        I.setState({ fileList });\\n      },\\n    };\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>3、使用 fileList 对列表进行完全控制，可以实现各种自定义功能，以下演示三种情况：</h3>\\n        <p>1) 上传列表数量的限制。</p>\\n        <p>2) 读取远程路径并显示链接。</p>\\n        <p>3) 按照服务器返回信息筛选成功上传的文件。</p>\\n        <Upload {...props} fileList={this.state.fileList}>\\n          <Button size=\\\"small\\\" type=\\\"secondary\\\" disabled={props.disabled}>\\n            <Icon size={12} name=\\\"upload\\\" /> 上传文件\\n          </Button>\\n        </Upload>\\n      </div>\\n    );\\n  }\\n}\\n\\n@CSSModules(styles, { allowMultiple })\\nclass UploadDemo4 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      fileList: [{\\n        uid: -1,\\n        name: 'xxx.png',\\n        status: 'done',\\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n      }],\\n    };\\n  }\\n\\n  handleChange = (info) => {\\n    this.setState({ fileList: info.fileList });\\n  }\\n  beforeUpload(file) {\\n    const isJPG = file.type === 'image/png';\\n    if (!isJPG) {\\n      message.error('请上传.png文件!');\\n    }\\n    const isLt2M = file.size < 1024 * 1000;\\n    if (!isLt2M) {\\n      message.error('图片不能超过1000KB!');\\n    }\\n    return isJPG && isLt2M;\\n  }\\n  render() {\\n    const props = {\\n      action: '//jsonplaceholder.typicode.com/posts/',\\n      disabled: false,\\n      listType: 'picture-card',\\n      fileList: this.state.fileList,\\n      onPreview: this.handlePreview,\\n      onChange: this.handleChange,\\n      beforeUpload: this.beforeUpload,\\n      onResponse(response) {\\n        response = { result: 'success', msg: '上传成功！' };\\n        if (response.result === 'success') {\\n          return {\\n            success: true,\\n            message: '上传成功',\\n          };\\n        }\\n\\n        return {\\n          success: false,\\n          message: response.msg,\\n        };\\n      },\\n    };\\n\\n    const uploadButton = (\\n      <div styleName=\\\"upload-btn\\\">\\n        <Icon name=\\\"plus\\\" size={25} />\\n        <div styleName=\\\"upload-text\\\">上传</div>\\n      </div>\\n    );\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>4、显示上传缩略图</h3>\\n        <p>点击上传图片，并使用 beforeUpload 限制用户上传的图片格式和大小。</p>\\n        <Upload {...props}>\\n          {this.state.fileList.length >= 3 ? null : uploadButton}\\n        </Upload>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default class UploadDemo extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <UploadDemo1 />\\n        <br /><br />\\n        <UploadDemo2 />\\n        <br /><br />\\n        <UploadDemo3 />\\n        <br /><br />\\n        <UploadDemo4 />\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 7.b5231860758d0d131cdd.js","module.exports = \"import CSSModules from 'react-css-modules';\\nimport React, { Component } from 'react';\\nimport { allowMultiple } from '../../../constants';\\nimport Upload from '../Upload';\\nimport Icon from '../../icon/Icon';\\nimport Button from '../../button/Button';\\nimport message from '../../message/index';\\nimport styles from './index.css';\\n\\n@CSSModules(styles, { allowMultiple })\\nclass UploadDemo1 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n    };\\n  }\\n  render() {\\n    const props = {\\n      name: 'file',\\n      action: 'https://jsonplaceholder.typicode.com/posts/',\\n      headers: {\\n        authorization: 'authorization-text',\\n      },\\n      multiple: true,\\n      disabled: false,\\n      onResponse(response) {\\n        response = { result: 'success', msg: '上传成功！' };\\n        if (response.result === 'success') {\\n          return {\\n            success: true,\\n            message: '上传成功',\\n          };\\n        }\\n\\n        return {\\n          success: false,\\n          message: response.msg,\\n        };\\n      },\\n      onChange(info) {\\n        if (info.file.status !== 'uploading') {\\n          // console.log(info.file, info.fileList);\\n        }\\n        if (info.file.status === 'done') {\\n          message.success(`${info.file.name} 文件上传成功.`);\\n        } else if (info.file.status === 'error') {\\n          message.error(`${info.file.name} 文件上传失败！`);\\n        }\\n      },\\n    };\\n\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>1、经典款式，用户点击按钮弹出文件选择框。</h3>\\n        <Upload {...props}>\\n          <Button size=\\\"small\\\" type=\\\"secondary\\\" disabled={props.disabled}>\\n            <Icon size={12} name=\\\"upload\\\" /> 上传文件\\n          </Button>\\n        </Upload>\\n      </div>\\n    );\\n  }\\n}\\n\\n@CSSModules(styles, { allowMultiple })\\nclass UploadDemo2 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n    };\\n  }\\n  render() {\\n    const props = {\\n      name: 'file',\\n      action: 'https://jsonplaceholder.typicode.com/posts/',\\n      headers: {\\n        authorization: 'authorization-text',\\n      },\\n      multiple: true,\\n      disabled: false,\\n      onResponse(response) {\\n        response = { result: 'success', msg: '上传成功！' };\\n        if (response.result === 'success') {\\n          return {\\n            success: true,\\n            message: '上传成功',\\n          };\\n        }\\n\\n        return {\\n          success: false,\\n          message: response.msg,\\n        };\\n      },\\n      onChange(info) {\\n        if (info.file.status !== 'uploading') {\\n          // console.log(info.file, info.fileList);\\n        }\\n        if (info.file.status === 'done') {\\n          message.success(`${info.file.name} 文件上传成功.`);\\n        } else if (info.file.status === 'error') {\\n          message.error(`${info.file.name} 文件上传失败！`);\\n        }\\n      },\\n      defaultFileList: [{\\n        uid: 1,\\n        name: '图片1.png',\\n        status: 'done',\\n        url: 'https://www.ehuodi.com/module/index/img/index2/line2_bg.png',\\n      }, {\\n        uid: 2,\\n        name: '图片2.png',\\n        status: 'done',\\n        url: 'https://www.ehuodi.com/module/index/img/index2/line2_bg.png',\\n      }, {\\n        uid: 3,\\n        name: '图片3.png',\\n        status: 'error',\\n        response: '上传失败，图片太大',\\n      }],\\n    };\\n\\n\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>2、已上传文件的列表</h3>\\n        <p>使用 defaultFileList 设置已上传的内容。</p>\\n        <Upload {...props}>\\n          <Button size=\\\"small\\\" type=\\\"secondary\\\" disabled={props.disabled}>\\n            <Icon size={12} name=\\\"upload\\\" /> 上传文件\\n          </Button>\\n        </Upload>\\n      </div>\\n    );\\n  }\\n}\\n\\n@CSSModules(styles, { allowMultiple })\\nclass UploadDemo3 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      fileList: [{\\n        uid: -1,\\n        name: 'xxx.png',\\n        status: 'done',\\n        url: 'https://www.ehuodi.com/module/index/img/index2/line2_bg.png',\\n      }],\\n    };\\n  }\\n\\n  render() {\\n    const I = this;\\n    const props = {\\n      action: '//jsonplaceholder.typicode.com/posts/',\\n      disabled: false,\\n      onResponse(response) {\\n        response = { result: 'success', msg: '上传成功！' };\\n        if (response.result === 'success') {\\n          return {\\n            success: true,\\n            message: '上传成功',\\n          };\\n        }\\n\\n        return {\\n          success: false,\\n          message: response.msg,\\n        };\\n      },\\n      onChange(info) {\\n        let fileList = info.fileList;\\n\\n        // 最多只留1个文件，前面的将会被替换\\n        fileList = fileList.slice(-1);\\n\\n        // 读取上传后的文件链接\\n        fileList = fileList.map((file) => {\\n          if (file.response) {\\n            file.url = file.response.url;\\n          }\\n          return file;\\n        });\\n\\n        // // 过滤上传成功的文件\\n        // fileList = fileList.filter((file) => {\\n        //   if (file.response) {\\n        //     return file.status === 'done';\\n        //   }\\n        //   return true;\\n        // });\\n\\n        I.setState({ fileList });\\n      },\\n    };\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>3、使用 fileList 对列表进行完全控制，可以实现各种自定义功能，以下演示三种情况：</h3>\\n        <p>1) 上传列表数量的限制。</p>\\n        <p>2) 读取远程路径并显示链接。</p>\\n        <p>3) 按照服务器返回信息筛选成功上传的文件。</p>\\n        <Upload {...props} fileList={this.state.fileList}>\\n          <Button size=\\\"small\\\" type=\\\"secondary\\\" disabled={props.disabled}>\\n            <Icon size={12} name=\\\"upload\\\" /> 上传文件\\n          </Button>\\n        </Upload>\\n      </div>\\n    );\\n  }\\n}\\n\\n@CSSModules(styles, { allowMultiple })\\nclass UploadDemo4 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      fileList: [{\\n        uid: -1,\\n        name: 'xxx.png',\\n        status: 'done',\\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n      }],\\n    };\\n  }\\n\\n  handleChange = (info) => {\\n    this.setState({ fileList: info.fileList });\\n  }\\n  beforeUpload(file) {\\n    const isJPG = file.type === 'image/png';\\n    if (!isJPG) {\\n      message.error('请上传.png文件!');\\n    }\\n    const isLt2M = file.size < 1024 * 1000;\\n    if (!isLt2M) {\\n      message.error('图片不能超过1000KB!');\\n    }\\n    return isJPG && isLt2M;\\n  }\\n  render() {\\n    const props = {\\n      action: '//jsonplaceholder.typicode.com/posts/',\\n      disabled: false,\\n      listType: 'picture-card',\\n      fileList: this.state.fileList,\\n      onPreview: this.handlePreview,\\n      onChange: this.handleChange,\\n      beforeUpload: this.beforeUpload,\\n      onResponse(response) {\\n        response = { result: 'success', msg: '上传成功！' };\\n        if (response.result === 'success') {\\n          return {\\n            success: true,\\n            message: '上传成功',\\n          };\\n        }\\n\\n        return {\\n          success: false,\\n          message: response.msg,\\n        };\\n      },\\n    };\\n\\n    const uploadButton = (\\n      <div styleName=\\\"upload-btn\\\">\\n        <Icon name=\\\"plus\\\" size={25} />\\n        <div styleName=\\\"upload-text\\\">上传</div>\\n      </div>\\n    );\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h3>4、显示上传缩略图</h3>\\n        <p>点击上传图片，并使用 beforeUpload 限制用户上传的图片格式和大小。</p>\\n        <Upload {...props}>\\n          {this.state.fileList.length >= 3 ? null : uploadButton}\\n        </Upload>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default class UploadDemo extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <UploadDemo1 />\\n        <br /><br />\\n        <UploadDemo2 />\\n        <br /><br />\\n        <UploadDemo3 />\\n        <br /><br />\\n        <UploadDemo4 />\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/components/upload/demo/index.js\n// module id = liFK\n// module chunks = 7"],"sourceRoot":""}