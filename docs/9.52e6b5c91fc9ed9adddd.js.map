{"version":3,"sources":["webpack:///9.52e6b5c91fc9ed9adddd.js","webpack:///./src/components/trigger/demo/index.js?8b41"],"names":["webpackJsonp","Ek3L","module","exports"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"9.52e6b5c91fc9ed9adddd.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ \"Ek3L\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"import { Component } from 'react';\\nimport Trigger from '../Trigger';\\nimport Button from '../../button';\\nimport Radio, { RadioGroup } from '../../radio';\\n\\nconst PLACEMENT_ENUM = {\\n  left: {\\n    points: ['cr', 'cl'],\\n  },\\n  right: {\\n    points: ['cl', 'cr'],\\n  },\\n  top: {\\n    points: ['bc', 'tc'],\\n  },\\n  bottom: {\\n    points: ['tc', 'bc'],\\n  },\\n  topLeft: {\\n    points: ['bl', 'tl'],\\n  },\\n  topRight: {\\n    points: ['br', 'tr'],\\n  },\\n  bottomRight: {\\n    points: ['tr', 'br'],\\n  },\\n  bottomLeft: {\\n    points: ['tl', 'bl'],\\n  },\\n};\\n\\nconst ActionType = [\\n  'hover',\\n  'click',\\n];\\n\\nexport default class TriggerDemo extends Component {\\n  state = {\\n    placement: 'bottom',\\n    action: 'click',\\n    visible: false,\\n  }\\n  onChangePlacement = (e) => {\\n    this.setState({\\n      placement: e.target.value,\\n    });\\n  }\\n  onChangeActionType = (e) => {\\n    this.setState({\\n      action: e.target.value,\\n    });\\n  }\\n  onClosePopup = () => {\\n    this.setState({\\n      visible: false,\\n    });\\n  }\\n  onPopupVisibleChange = (visible) => {\\n    console.log('onPopupVisibleChange', visible);\\n    this.setState({\\n      visible,\\n    });\\n  }\\n  renderPlacementSelector() {\\n    const { placement } = this.state;\\n    return (\\n      <select value={placement} onChange={this.onChangePlacement}>\\n        {\\n          Object.keys(PLACEMENT_ENUM).map(p => (\\n            <option key={p}>{p}</option>\\n          ))\\n        }\\n      </select>\\n    );\\n  }\\n  render() {\\n    const {\\n      placement,\\n      action,\\n    } = this.state;\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h5>普通用法</h5>\\n        <label htmlFor=\\\"placement\\\">对齐方式</label>\\n        {\\n          this.renderPlacementSelector()\\n        }\\n        <label htmlFor=\\\"action\\\">触发方式</label>\\n        <RadioGroup value={action} onChange={this.onChangeActionType}>\\n          {\\n            ActionType.map(type => (\\n              <Radio\\n                value={type}\\n                key={type}\\n              >{type}</Radio>\\n            ))\\n          }\\n        </RadioGroup>\\n        <Trigger\\n          action={action}\\n          popup={\\n            <div style={{ border: '1px solid #000', padding: 10, background: '#fff' }}>popup content</div>\\n          }\\n          placement={PLACEMENT_ENUM[placement].points}\\n          mouseLeaveDelay={100}\\n        >\\n          <Button>{`${action} me`}</Button>\\n        </Trigger>\\n        <h5>手动控制关闭</h5>\\n        <Trigger\\n          action={'click'}\\n          popupVisible={this.state.visible}\\n          popup={\\n            <div onClick={this.onClosePopup}>click me to close</div>\\n          }\\n          onPopupVisibleChange={this.onPopupVisibleChange}\\n        >\\n          <Button>click</Button>\\n        </Trigger>\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 9.52e6b5c91fc9ed9adddd.js","module.exports = \"import { Component } from 'react';\\nimport Trigger from '../Trigger';\\nimport Button from '../../button';\\nimport Radio, { RadioGroup } from '../../radio';\\n\\nconst PLACEMENT_ENUM = {\\n  left: {\\n    points: ['cr', 'cl'],\\n  },\\n  right: {\\n    points: ['cl', 'cr'],\\n  },\\n  top: {\\n    points: ['bc', 'tc'],\\n  },\\n  bottom: {\\n    points: ['tc', 'bc'],\\n  },\\n  topLeft: {\\n    points: ['bl', 'tl'],\\n  },\\n  topRight: {\\n    points: ['br', 'tr'],\\n  },\\n  bottomRight: {\\n    points: ['tr', 'br'],\\n  },\\n  bottomLeft: {\\n    points: ['tl', 'bl'],\\n  },\\n};\\n\\nconst ActionType = [\\n  'hover',\\n  'click',\\n];\\n\\nexport default class TriggerDemo extends Component {\\n  state = {\\n    placement: 'bottom',\\n    action: 'click',\\n    visible: false,\\n  }\\n  onChangePlacement = (e) => {\\n    this.setState({\\n      placement: e.target.value,\\n    });\\n  }\\n  onChangeActionType = (e) => {\\n    this.setState({\\n      action: e.target.value,\\n    });\\n  }\\n  onClosePopup = () => {\\n    this.setState({\\n      visible: false,\\n    });\\n  }\\n  onPopupVisibleChange = (visible) => {\\n    console.log('onPopupVisibleChange', visible);\\n    this.setState({\\n      visible,\\n    });\\n  }\\n  renderPlacementSelector() {\\n    const { placement } = this.state;\\n    return (\\n      <select value={placement} onChange={this.onChangePlacement}>\\n        {\\n          Object.keys(PLACEMENT_ENUM).map(p => (\\n            <option key={p}>{p}</option>\\n          ))\\n        }\\n      </select>\\n    );\\n  }\\n  render() {\\n    const {\\n      placement,\\n      action,\\n    } = this.state;\\n    return (\\n      <div className=\\\"markdown-block\\\">\\n        <h5>普通用法</h5>\\n        <label htmlFor=\\\"placement\\\">对齐方式</label>\\n        {\\n          this.renderPlacementSelector()\\n        }\\n        <label htmlFor=\\\"action\\\">触发方式</label>\\n        <RadioGroup value={action} onChange={this.onChangeActionType}>\\n          {\\n            ActionType.map(type => (\\n              <Radio\\n                value={type}\\n                key={type}\\n              >{type}</Radio>\\n            ))\\n          }\\n        </RadioGroup>\\n        <Trigger\\n          action={action}\\n          popup={\\n            <div style={{ border: '1px solid #000', padding: 10, background: '#fff' }}>popup content</div>\\n          }\\n          placement={PLACEMENT_ENUM[placement].points}\\n          mouseLeaveDelay={100}\\n        >\\n          <Button>{`${action} me`}</Button>\\n        </Trigger>\\n        <h5>手动控制关闭</h5>\\n        <Trigger\\n          action={'click'}\\n          popupVisible={this.state.visible}\\n          popup={\\n            <div onClick={this.onClosePopup}>click me to close</div>\\n          }\\n          onPopupVisibleChange={this.onPopupVisibleChange}\\n        >\\n          <Button>click</Button>\\n        </Trigger>\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/components/trigger/demo/index.js\n// module id = Ek3L\n// module chunks = 9"],"sourceRoot":""}